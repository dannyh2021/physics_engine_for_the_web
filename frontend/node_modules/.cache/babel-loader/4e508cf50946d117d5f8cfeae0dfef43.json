{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground3.tsx\";\nimport React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, -CANVAS_HEIGHT / 6, CANVAS_HEIGHT / 6);\ncamera.up.set(0, 1, 0); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 50);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Playground3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.scene = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null; // bindings\n\n    this.onRestart = this.onRestart.bind(this);\n    this.onResume = this.onResume.bind(this);\n    this.onPause = this.onPause.bind(this);\n  }\n\n  componentDidMount() {\n    // graphics\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement);\n    this.initialize();\n    this.onVisualize();\n  }\n\n  initialize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n\n    this.w = new World();\n    this.scene = new THREE.Scene(); // set up objects\n\n    const sphere = new Sphere(new Vector3(0, 0, 40), 5);\n    sphere.velocity = new Vector3(0, 0, 0);\n    const box = new Box(new Vector3(30, 0, 40), 5, 5, 5);\n    box.velocity = new Vector3(0, 0, 0);\n    this.w.addObject(sphere);\n    this.w.addObject(box); // add plane\n\n    const plane = new Plane(new Vector3(0, 0, 0), new Vector3(0, 0, 1), 1000, 1000);\n    this.w.addObject(plane); // add object meshes and bounding box meshes to scene\n\n    for (let object of this.w.objects) {\n      this.scene.add(object.mesh);\n\n      if (object instanceof Plane) {\n        continue;\n      }\n\n      this.scene.add(object.boundingBoxMesh);\n    } // add gridHelper\n\n\n    const gridHelper = new THREE.GridHelper(100, 10);\n    gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n    this.scene.add(gridHelper); // add lighting\n\n    this.scene.add(point_light, ambient_light);\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    } // set up objects\n\n\n    const b = new Box(new Vector3(0, 0, 20), 10, 10, 5);\n    const boxGeometry = new THREE.BoxGeometry(b.width, b.length, b.height);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x00bcd6\n    });\n    const box = new THREE.Mesh(boxGeometry, material); // set up scene\n\n    const scene = new THREE.Scene();\n    scene.add(box); // add lighting\n\n    scene.add(point_light, ambient_light); // add gridHelper\n\n    const gridHelper = new THREE.GridHelper(100, 10);\n    gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n    scene.add(gridHelper);\n    let xRotationAngle = 0;\n    let yRotationAngle = 0;\n    let zRotationAngle = 0;\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      b.integrate(1 / 60);\n      box.position.set(b.position.x, b.position.y, b.position.z); // update rotation of the box mesh\n\n      box.setRotationFromQuaternion(b.rotation); //box.rotation.setFromRotationMatrix(convertMatrix3ToMatrix4(b.rotation));\n\n      /* const eulerAngles = getEulerAngles(b.rotation);\n      box.rotation.x = eulerAngles.psi;\n      box.rotation.y = eulerAngles.theta;\n      box.rotation.z = eulerAngles.phi;*/\n\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  onRestart() {\n    this.initialize();\n    this.onVisualize();\n  }\n\n  onResume() {\n    this.onVisualize();\n  }\n\n  onPause() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playground 3 page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onRestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onResume,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onPause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","World","THREE","Vector3","Sphere","Box","OrbitControls","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Playground3","Component","constructor","props","canvasRef","w","renderer","animationRequestID","scene","createRef","onRestart","bind","onResume","onPause","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","initialize","onVisualize","cancelAnimationFrame","Scene","sphere","velocity","box","addObject","plane","Plane","object","objects","add","mesh","boundingBoxMesh","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","b","boxGeometry","BoxGeometry","width","length","height","material","MeshPhongMaterial","color","Mesh","xRotationAngle","yRotationAngle","zRotationAngle","currentInstance","animate","requestAnimationFrame","integrate","x","y","z","setRotationFromQuaternion","rotation","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground3.tsx"],"sourcesContent":["import React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { Matrix3, Scene, Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { getEulerAngles, xRotationMatrix3, yRotationMatrix3, zRotationMatrix3, convertMatrix3ToMatrix4 } from \"../physics_engine/math_library\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, -CANVAS_HEIGHT / 6, CANVAS_HEIGHT / 6);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 50);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Playground3 extends React.Component {\n    private canvasRef: any;\n\n    private w: World;\n\n    private renderer: any;\n    private animationRequestID: any;\n    private scene: THREE.Scene;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        // bindings\n        this.onRestart = this.onRestart.bind(this);\n        this.onResume = this.onResume.bind(this);\n        this.onPause = this.onPause.bind(this);\n    }\n\n    componentDidMount(): void {\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        this.initialize();\n        this.onVisualize();\n    }\n\n    initialize(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        this.w = new World();\n        this.scene = new THREE.Scene();\n\n        // set up objects\n        const sphere = new Sphere(new Vector3(0, 0, 40), 5);\n        sphere.velocity = new Vector3(0, 0, 0);\n\n        const box = new Box(new Vector3(30, 0, 40), 5, 5, 5);\n        box.velocity = new Vector3(0, 0, 0);\n\n        this.w.addObject(sphere);\n        this.w.addObject(box);\n\n        // add plane\n        const plane = new Plane(new Vector3(0, 0, 0), new Vector3(0, 0, 1), 1000, 1000);\n        this.w.addObject(plane);\n\n        // add object meshes and bounding box meshes to scene\n        for (let object of this.w.objects) {\n            this.scene.add(object.mesh);\n\n            if (object instanceof Plane) {\n                continue;\n            }\n            this.scene.add(object.boundingBoxMesh);\n        }\n\n        // add gridHelper\n        const gridHelper = new THREE.GridHelper( 100, 10 );\n        gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI/2);\n        this.scene.add(gridHelper);\n\n        // add lighting\n        this.scene.add(point_light, ambient_light);\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        // set up objects\n        const b = new Box(new Vector3(0, 0, 20), 10, 10, 5);\n\n        const boxGeometry = new THREE.BoxGeometry(b.width, b.length, b.height);\n        const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n        const box = new THREE.Mesh(boxGeometry, material);\n        \n        // set up scene\n        const scene = new THREE.Scene();\n        scene.add(box);\n\n        // add lighting\n        scene.add(point_light, ambient_light);\n\n        // add gridHelper\n        const gridHelper = new THREE.GridHelper( 100, 10 );\n        gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n        scene.add(gridHelper);\n\n        let xRotationAngle = 0;\n        let yRotationAngle = 0;\n        let zRotationAngle = 0;\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n            \n            b.integrate(1/60);\n\n            box.position.set(b.position.x, b.position.y, b.position.z);\n\n            // update rotation of the box mesh\n            box.setRotationFromQuaternion(b.rotation);\n            //box.rotation.setFromRotationMatrix(convertMatrix3ToMatrix4(b.rotation));\n            /* const eulerAngles = getEulerAngles(b.rotation);\n            box.rotation.x = eulerAngles.psi;\n            box.rotation.y = eulerAngles.theta;\n            box.rotation.z = eulerAngles.phi;*/\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    onRestart(): void {\n        this.initialize();\n        this.onVisualize();\n    }\n\n    onResume(): void {\n        this.onVisualize();\n    }\n\n    onPause(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"playground\">\n                <h2>Playground 3 page desu...</h2>\n                <button onClick={this.onRestart}>Restart</button>\n                <button onClick={this.onResume}>Resume</button>\n                <button onClick={this.onPause}>Pause</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}