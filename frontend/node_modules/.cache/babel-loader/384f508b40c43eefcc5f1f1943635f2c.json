{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar THREE = require(\"three\");\n\nvar STATE = {\n  NONE: -1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_DOLLY: 4,\n  TOUCH_PAN: 5\n};\nvar CHANGE_EVENT = {\n  type: 'change'\n};\nvar START_EVENT = {\n  type: 'start'\n};\nvar END_EVENT = {\n  type: 'end'\n};\nvar EPS = 0.000001;\n/**\n* @author qiao / https://github.com/qiao\n* @author mrdoob / http://mrdoob.com\n* @author alteredq / http://alteredqualia.com/\n* @author WestLangley / http://github.com/WestLangley\n* @author erich666 / http://erichaines.com\n* @author nicolaspanel / http://github.com/nicolaspanel\n*\n* This set of controls performs orbiting, dollying (zooming), and panning.\n* Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n*    Orbit - left mouse / touch: one finger move\n*    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n*    Pan - right mouse, or arrow keys / touch: three finger swipe\n*/\n\nvar OrbitControls = function (_super) {\n  __extends(OrbitControls, _super);\n\n  function OrbitControls(object, domElement, domWindow) {\n    var _this = _super.call(this) || this;\n\n    _this.object = object;\n    _this.domElement = domElement !== undefined ? domElement : document;\n    _this.window = domWindow !== undefined ? domWindow : window; // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n    // Set to false to disable use of the keys\n\n    _this.enableKeys = true; // The four arrow keys\n\n    _this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // for update speedup\n\n    _this.updateOffset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n    _this.updateQuat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    _this.updateQuatInverse = _this.updateQuat.clone().inverse();\n    _this.updateLastPosition = new THREE.Vector3();\n    _this.updateLastQuaternion = new THREE.Quaternion();\n    _this.state = STATE.NONE;\n    _this.scale = 1; // current position in spherical coordinates\n\n    _this.spherical = new THREE.Spherical();\n    _this.sphericalDelta = new THREE.Spherical();\n    _this.panOffset = new THREE.Vector3();\n    _this.zoomChanged = false;\n    _this.rotateStart = new THREE.Vector2();\n    _this.rotateEnd = new THREE.Vector2();\n    _this.rotateDelta = new THREE.Vector2();\n    _this.panStart = new THREE.Vector2();\n    _this.panEnd = new THREE.Vector2();\n    _this.panDelta = new THREE.Vector2();\n    _this.dollyStart = new THREE.Vector2();\n    _this.dollyEnd = new THREE.Vector2();\n    _this.dollyDelta = new THREE.Vector2();\n    _this.panLeftV = new THREE.Vector3();\n    _this.panUpV = new THREE.Vector3();\n    _this.panInternalOffset = new THREE.Vector3(); // event handlers - FSM: listen for events and reset state\n\n    _this.onMouseDown = function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n\n      if (event.button === _this.mouseButtons.ORBIT) {\n        if (_this.enableRotate === false) return;\n\n        _this.rotateStart.set(event.clientX, event.clientY);\n\n        _this.state = STATE.ROTATE;\n      } else if (event.button === _this.mouseButtons.ZOOM) {\n        if (_this.enableZoom === false) return;\n\n        _this.dollyStart.set(event.clientX, event.clientY);\n\n        _this.state = STATE.DOLLY;\n      } else if (event.button === _this.mouseButtons.PAN) {\n        if (_this.enablePan === false) return;\n\n        _this.panStart.set(event.clientX, event.clientY);\n\n        _this.state = STATE.PAN;\n      }\n\n      if (_this.state !== STATE.NONE) {\n        document.addEventListener('mousemove', _this.onMouseMove, false);\n        document.addEventListener('mouseup', _this.onMouseUp, false);\n\n        _this.dispatchEvent(START_EVENT);\n      }\n    };\n\n    _this.onMouseMove = function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n\n      if (_this.state === STATE.ROTATE) {\n        if (_this.enableRotate === false) return;\n\n        _this.rotateEnd.set(event.clientX, event.clientY);\n\n        _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart);\n\n        var element = _this.domElement === document ? _this.domElement.body : _this.domElement; // rotating across whole screen goes 360 degrees around\n\n        _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientWidth * _this.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n\n        _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight * _this.rotateSpeed);\n\n        _this.rotateStart.copy(_this.rotateEnd);\n\n        _this.update();\n      } else if (_this.state === STATE.DOLLY) {\n        if (_this.enableZoom === false) return;\n\n        _this.dollyEnd.set(event.clientX, event.clientY);\n\n        _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n\n        if (_this.dollyDelta.y > 0) {\n          _this.dollyIn(_this.getZoomScale());\n        } else if (_this.dollyDelta.y < 0) {\n          _this.dollyOut(_this.getZoomScale());\n        }\n\n        _this.dollyStart.copy(_this.dollyEnd);\n\n        _this.update();\n      } else if (_this.state === STATE.PAN) {\n        if (_this.enablePan === false) return;\n\n        _this.panEnd.set(event.clientX, event.clientY);\n\n        _this.panDelta.subVectors(_this.panEnd, _this.panStart);\n\n        _this.pan(_this.panDelta.x, _this.panDelta.y);\n\n        _this.panStart.copy(_this.panEnd);\n\n        _this.update();\n      }\n    };\n\n    _this.onMouseUp = function (event) {\n      if (_this.enabled === false) return;\n      document.removeEventListener('mousemove', _this.onMouseMove, false);\n      document.removeEventListener('mouseup', _this.onMouseUp, false);\n\n      _this.dispatchEvent(END_EVENT);\n\n      _this.state = STATE.NONE;\n    };\n\n    _this.onMouseWheel = function (event) {\n      if (_this.enabled === false || _this.enableZoom === false || _this.state !== STATE.NONE && _this.state !== STATE.ROTATE) return;\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (event.deltaY < 0) {\n        _this.dollyOut(_this.getZoomScale());\n      } else if (event.deltaY > 0) {\n        _this.dollyIn(_this.getZoomScale());\n      }\n\n      _this.update();\n\n      _this.dispatchEvent(START_EVENT); // not sure why these are here...\n\n\n      _this.dispatchEvent(END_EVENT);\n    };\n\n    _this.onKeyDown = function (event) {\n      if (_this.enabled === false || _this.enableKeys === false || _this.enablePan === false) return;\n\n      switch (event.keyCode) {\n        case _this.keys.UP:\n          {\n            _this.pan(0, _this.keyPanSpeed);\n\n            _this.update();\n          }\n          break;\n\n        case _this.keys.BOTTOM:\n          {\n            _this.pan(0, -_this.keyPanSpeed);\n\n            _this.update();\n          }\n          break;\n\n        case _this.keys.LEFT:\n          {\n            _this.pan(_this.keyPanSpeed, 0);\n\n            _this.update();\n          }\n          break;\n\n        case _this.keys.RIGHT:\n          {\n            _this.pan(-_this.keyPanSpeed, 0);\n\n            _this.update();\n          }\n          break;\n      }\n    };\n\n    _this.onTouchStart = function (event) {\n      if (_this.enabled === false) return;\n\n      switch (event.touches.length) {\n        // one-fingered touch: rotate\n        case 1:\n          {\n            if (_this.enableRotate === false) return;\n\n            _this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n            _this.state = STATE.TOUCH_ROTATE;\n          }\n          break;\n        // two-fingered touch: dolly\n\n        case 2:\n          {\n            if (_this.enableZoom === false) return;\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            _this.dollyStart.set(0, distance);\n\n            _this.state = STATE.TOUCH_DOLLY;\n          }\n          break;\n        // three-fingered touch: pan\n\n        case 3:\n          {\n            if (_this.enablePan === false) return;\n\n            _this.panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n            _this.state = STATE.TOUCH_PAN;\n          }\n          break;\n\n        default:\n          {\n            _this.state = STATE.NONE;\n          }\n      }\n\n      if (_this.state !== STATE.NONE) {\n        _this.dispatchEvent(START_EVENT);\n      }\n    };\n\n    _this.onTouchMove = function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        // one-fingered touch: rotate\n        case 1:\n          {\n            if (_this.enableRotate === false) return;\n            if (_this.state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n            _this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n            _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart);\n\n            var element = _this.domElement === document ? _this.domElement.body : _this.domElement; // rotating across whole screen goes 360 degrees around\n\n            _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientWidth * _this.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n\n            _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight * _this.rotateSpeed);\n\n            _this.rotateStart.copy(_this.rotateEnd);\n\n            _this.update();\n          }\n          break;\n        // two-fingered touch: dolly\n\n        case 2:\n          {\n            if (_this.enableZoom === false) return;\n            if (_this.state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            _this.dollyEnd.set(0, distance);\n\n            _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n\n            if (_this.dollyDelta.y > 0) {\n              _this.dollyOut(_this.getZoomScale());\n            } else if (_this.dollyDelta.y < 0) {\n              _this.dollyIn(_this.getZoomScale());\n            }\n\n            _this.dollyStart.copy(_this.dollyEnd);\n\n            _this.update();\n          }\n          break;\n        // three-fingered touch: pan\n\n        case 3:\n          {\n            if (_this.enablePan === false) return;\n            if (_this.state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n            _this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n            _this.panDelta.subVectors(_this.panEnd, _this.panStart);\n\n            _this.pan(_this.panDelta.x, _this.panDelta.y);\n\n            _this.panStart.copy(_this.panEnd);\n\n            _this.update();\n          }\n          break;\n\n        default:\n          {\n            _this.state = STATE.NONE;\n          }\n      }\n    };\n\n    _this.onTouchEnd = function (event) {\n      if (_this.enabled === false) return;\n\n      _this.dispatchEvent(END_EVENT);\n\n      _this.state = STATE.NONE;\n    };\n\n    _this.onContextMenu = function (event) {\n      event.preventDefault();\n    };\n\n    _this.domElement.addEventListener('contextmenu', _this.onContextMenu, false);\n\n    _this.domElement.addEventListener('mousedown', _this.onMouseDown, false);\n\n    _this.domElement.addEventListener('wheel', _this.onMouseWheel, false);\n\n    _this.domElement.addEventListener('touchstart', _this.onTouchStart, false);\n\n    _this.domElement.addEventListener('touchend', _this.onTouchEnd, false);\n\n    _this.domElement.addEventListener('touchmove', _this.onTouchMove, false);\n\n    _this.window.addEventListener('keydown', _this.onKeyDown, false); // force an update at start\n\n\n    _this.update();\n\n    return _this;\n  }\n\n  OrbitControls.prototype.update = function () {\n    var position = this.object.position;\n    this.updateOffset.copy(position).sub(this.target); // rotate offset to \"y-axis-is-up\" space\n\n    this.updateOffset.applyQuaternion(this.updateQuat); // angle from z-axis around y-axis\n\n    this.spherical.setFromVector3(this.updateOffset);\n\n    if (this.autoRotate && this.state === STATE.NONE) {\n      this.rotateLeft(this.getAutoRotationAngle());\n    }\n\n    this.spherical.theta += this.sphericalDelta.theta;\n    this.spherical.phi += this.sphericalDelta.phi; // restrict theta to be between desired limits\n\n    this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta)); // restrict phi to be between desired limits\n\n    this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi));\n    this.spherical.makeSafe();\n    this.spherical.radius *= this.scale; // restrict radius to be between desired limits\n\n    this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius)); // move target to panned location\n\n    this.target.add(this.panOffset);\n    this.updateOffset.setFromSpherical(this.spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n    this.updateOffset.applyQuaternion(this.updateQuatInverse);\n    position.copy(this.target).add(this.updateOffset);\n    this.object.lookAt(this.target);\n\n    if (this.enableDamping === true) {\n      this.sphericalDelta.theta *= 1 - this.dampingFactor;\n      this.sphericalDelta.phi *= 1 - this.dampingFactor;\n    } else {\n      this.sphericalDelta.set(0, 0, 0);\n    }\n\n    this.scale = 1;\n    this.panOffset.set(0, 0, 0); // update condition is:\n    // min(camera displacement, camera rotation in radians)^2 > EPS\n    // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n    if (this.zoomChanged || this.updateLastPosition.distanceToSquared(this.object.position) > EPS || 8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n      this.dispatchEvent(CHANGE_EVENT);\n      this.updateLastPosition.copy(this.object.position);\n      this.updateLastQuaternion.copy(this.object.quaternion);\n      this.zoomChanged = false;\n      return true;\n    }\n\n    return false;\n  };\n\n  OrbitControls.prototype.panLeft = function (distance, objectMatrix) {\n    this.panLeftV.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n    this.panLeftV.multiplyScalar(-distance);\n    this.panOffset.add(this.panLeftV);\n  };\n\n  OrbitControls.prototype.panUp = function (distance, objectMatrix) {\n    this.panUpV.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n\n    this.panUpV.multiplyScalar(distance);\n    this.panOffset.add(this.panUpV);\n  }; // deltaX and deltaY are in pixels; right and down are positive\n\n\n  OrbitControls.prototype.pan = function (deltaX, deltaY) {\n    var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n    if (this.object instanceof THREE.PerspectiveCamera) {\n      // perspective\n      var position = this.object.position;\n      this.panInternalOffset.copy(position).sub(this.target);\n      var targetDistance = this.panInternalOffset.length(); // half of the fov is center to top of screen\n\n      targetDistance *= Math.tan(this.object.fov / 2 * Math.PI / 180.0); // we actually don't use screenWidth, since perspective camera is fixed to screen height\n\n      this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix);\n      this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix);\n    } else if (this.object instanceof THREE.OrthographicCamera) {\n      // orthographic\n      this.panLeft(deltaX * (this.object.right - this.object.left) / this.object.zoom / element.clientWidth, this.object.matrix);\n      this.panUp(deltaY * (this.object.top - this.object.bottom) / this.object.zoom / element.clientHeight, this.object.matrix);\n    } else {\n      // camera neither orthographic nor perspective\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n      this.enablePan = false;\n    }\n  };\n\n  OrbitControls.prototype.dollyIn = function (dollyScale) {\n    if (this.object instanceof THREE.PerspectiveCamera) {\n      this.scale /= dollyScale;\n    } else if (this.object instanceof THREE.OrthographicCamera) {\n      this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      this.enableZoom = false;\n    }\n  };\n\n  OrbitControls.prototype.dollyOut = function (dollyScale) {\n    if (this.object instanceof THREE.PerspectiveCamera) {\n      this.scale *= dollyScale;\n    } else if (this.object instanceof THREE.OrthographicCamera) {\n      this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n      this.object.updateProjectionMatrix();\n      this.zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      this.enableZoom = false;\n    }\n  };\n\n  OrbitControls.prototype.getAutoRotationAngle = function () {\n    return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed;\n  };\n\n  OrbitControls.prototype.getZoomScale = function () {\n    return Math.pow(0.95, this.zoomSpeed);\n  };\n\n  OrbitControls.prototype.rotateLeft = function (angle) {\n    this.sphericalDelta.theta -= angle;\n  };\n\n  OrbitControls.prototype.rotateUp = function (angle) {\n    this.sphericalDelta.phi -= angle;\n  };\n\n  OrbitControls.prototype.getPolarAngle = function () {\n    return this.spherical.phi;\n  };\n\n  OrbitControls.prototype.getAzimuthalAngle = function () {\n    return this.spherical.theta;\n  };\n\n  OrbitControls.prototype.dispose = function () {\n    this.domElement.removeEventListener('contextmenu', this.onContextMenu, false);\n    this.domElement.removeEventListener('mousedown', this.onMouseDown, false);\n    this.domElement.removeEventListener('wheel', this.onMouseWheel, false);\n    this.domElement.removeEventListener('touchstart', this.onTouchStart, false);\n    this.domElement.removeEventListener('touchend', this.onTouchEnd, false);\n    this.domElement.removeEventListener('touchmove', this.onTouchMove, false);\n    document.removeEventListener('mousemove', this.onMouseMove, false);\n    document.removeEventListener('mouseup', this.onMouseUp, false);\n    this.window.removeEventListener('keydown', this.onKeyDown, false); //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  OrbitControls.prototype.reset = function () {\n    this.target.copy(this.target0);\n    this.object.position.copy(this.position0);\n    this.object.zoom = this.zoom0;\n    this.object.updateProjectionMatrix();\n    this.dispatchEvent(CHANGE_EVENT);\n    this.update();\n    this.state = STATE.NONE;\n  };\n\n  Object.defineProperty(OrbitControls.prototype, \"center\", {\n    // backward compatibility\n    get: function get() {\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OrbitControls.prototype, \"noZoom\", {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return OrbitControls;\n}(THREE.EventDispatcher);\n\nexports.OrbitControls = OrbitControls;","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","THREE","require","STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","CHANGE_EVENT","type","START_EVENT","END_EVENT","EPS","OrbitControls","_super","object","domElement","domWindow","_this","call","undefined","document","window","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","target0","clone","position0","position","zoom0","zoom","updateOffset","updateQuat","Quaternion","setFromUnitVectors","up","updateQuatInverse","inverse","updateLastPosition","updateLastQuaternion","state","scale","spherical","Spherical","sphericalDelta","panOffset","zoomChanged","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","panLeftV","panUpV","panInternalOffset","onMouseDown","event","preventDefault","button","set","clientX","clientY","addEventListener","onMouseMove","onMouseUp","dispatchEvent","subVectors","element","body","rotateLeft","x","clientWidth","rotateUp","y","clientHeight","copy","update","dollyIn","getZoomScale","dollyOut","pan","removeEventListener","onMouseWheel","stopPropagation","deltaY","onKeyDown","keyCode","onTouchStart","touches","length","pageX","pageY","dx","dy","distance","sqrt","onTouchMove","onTouchEnd","onContextMenu","sub","applyQuaternion","setFromVector3","getAutoRotationAngle","theta","phi","max","min","makeSafe","radius","add","setFromSpherical","lookAt","distanceToSquared","dot","quaternion","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","deltaX","PerspectiveCamera","targetDistance","tan","fov","matrix","OrthographicCamera","right","left","top","bottom","console","warn","dollyScale","updateProjectionMatrix","pow","angle","getPolarAngle","getAzimuthalAngle","dispose","reset","defineProperty","get","enumerable","configurable","value","EventDispatcher","exports"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/three-orbitcontrols-ts/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar THREE = require(\"three\");\nvar STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5\n};\nvar CHANGE_EVENT = { type: 'change' };\nvar START_EVENT = { type: 'start' };\nvar END_EVENT = { type: 'end' };\nvar EPS = 0.000001;\n/**\n* @author qiao / https://github.com/qiao\n* @author mrdoob / http://mrdoob.com\n* @author alteredq / http://alteredqualia.com/\n* @author WestLangley / http://github.com/WestLangley\n* @author erich666 / http://erichaines.com\n* @author nicolaspanel / http://github.com/nicolaspanel\n*\n* This set of controls performs orbiting, dollying (zooming), and panning.\n* Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n*    Orbit - left mouse / touch: one finger move\n*    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n*    Pan - right mouse, or arrow keys / touch: three finger swipe\n*/\nvar OrbitControls = (function (_super) {\n    __extends(OrbitControls, _super);\n    function OrbitControls(object, domElement, domWindow) {\n        var _this = _super.call(this) || this;\n        _this.object = object;\n        _this.domElement = (domElement !== undefined) ? domElement : document;\n        _this.window = (domWindow !== undefined) ? domWindow : window;\n        // Set to false to disable this control\n        _this.enabled = true;\n        // \"target\" sets the location of focus, where the object orbits around\n        _this.target = new THREE.Vector3();\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        _this.minDistance = 0;\n        _this.maxDistance = Infinity;\n        // How far you can zoom in and out ( OrthographicCamera only )\n        _this.minZoom = 0;\n        _this.maxZoom = Infinity;\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        _this.minPolarAngle = 0; // radians\n        _this.maxPolarAngle = Math.PI; // radians\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        _this.minAzimuthAngle = -Infinity; // radians\n        _this.maxAzimuthAngle = Infinity; // radians\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        _this.enableDamping = false;\n        _this.dampingFactor = 0.25;\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        _this.enableZoom = true;\n        _this.zoomSpeed = 1.0;\n        // Set to false to disable rotating\n        _this.enableRotate = true;\n        _this.rotateSpeed = 1.0;\n        // Set to false to disable panning\n        _this.enablePan = true;\n        _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        _this.autoRotate = false;\n        _this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n        // Set to false to disable use of the keys\n        _this.enableKeys = true;\n        // The four arrow keys\n        _this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n        // Mouse buttons\n        _this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n        // for reset\n        _this.target0 = _this.target.clone();\n        _this.position0 = _this.object.position.clone();\n        _this.zoom0 = _this.object.zoom;\n        // for update speedup\n        _this.updateOffset = new THREE.Vector3();\n        // so camera.up is the orbit axis\n        _this.updateQuat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        _this.updateQuatInverse = _this.updateQuat.clone().inverse();\n        _this.updateLastPosition = new THREE.Vector3();\n        _this.updateLastQuaternion = new THREE.Quaternion();\n        _this.state = STATE.NONE;\n        _this.scale = 1;\n        // current position in spherical coordinates\n        _this.spherical = new THREE.Spherical();\n        _this.sphericalDelta = new THREE.Spherical();\n        _this.panOffset = new THREE.Vector3();\n        _this.zoomChanged = false;\n        _this.rotateStart = new THREE.Vector2();\n        _this.rotateEnd = new THREE.Vector2();\n        _this.rotateDelta = new THREE.Vector2();\n        _this.panStart = new THREE.Vector2();\n        _this.panEnd = new THREE.Vector2();\n        _this.panDelta = new THREE.Vector2();\n        _this.dollyStart = new THREE.Vector2();\n        _this.dollyEnd = new THREE.Vector2();\n        _this.dollyDelta = new THREE.Vector2();\n        _this.panLeftV = new THREE.Vector3();\n        _this.panUpV = new THREE.Vector3();\n        _this.panInternalOffset = new THREE.Vector3();\n        // event handlers - FSM: listen for events and reset state\n        _this.onMouseDown = function (event) {\n            if (_this.enabled === false)\n                return;\n            event.preventDefault();\n            if (event.button === _this.mouseButtons.ORBIT) {\n                if (_this.enableRotate === false)\n                    return;\n                _this.rotateStart.set(event.clientX, event.clientY);\n                _this.state = STATE.ROTATE;\n            }\n            else if (event.button === _this.mouseButtons.ZOOM) {\n                if (_this.enableZoom === false)\n                    return;\n                _this.dollyStart.set(event.clientX, event.clientY);\n                _this.state = STATE.DOLLY;\n            }\n            else if (event.button === _this.mouseButtons.PAN) {\n                if (_this.enablePan === false)\n                    return;\n                _this.panStart.set(event.clientX, event.clientY);\n                _this.state = STATE.PAN;\n            }\n            if (_this.state !== STATE.NONE) {\n                document.addEventListener('mousemove', _this.onMouseMove, false);\n                document.addEventListener('mouseup', _this.onMouseUp, false);\n                _this.dispatchEvent(START_EVENT);\n            }\n        };\n        _this.onMouseMove = function (event) {\n            if (_this.enabled === false)\n                return;\n            event.preventDefault();\n            if (_this.state === STATE.ROTATE) {\n                if (_this.enableRotate === false)\n                    return;\n                _this.rotateEnd.set(event.clientX, event.clientY);\n                _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart);\n                var element = _this.domElement === document ? _this.domElement.body : _this.domElement;\n                // rotating across whole screen goes 360 degrees around\n                _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientWidth * _this.rotateSpeed);\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight * _this.rotateSpeed);\n                _this.rotateStart.copy(_this.rotateEnd);\n                _this.update();\n            }\n            else if (_this.state === STATE.DOLLY) {\n                if (_this.enableZoom === false)\n                    return;\n                _this.dollyEnd.set(event.clientX, event.clientY);\n                _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n                if (_this.dollyDelta.y > 0) {\n                    _this.dollyIn(_this.getZoomScale());\n                }\n                else if (_this.dollyDelta.y < 0) {\n                    _this.dollyOut(_this.getZoomScale());\n                }\n                _this.dollyStart.copy(_this.dollyEnd);\n                _this.update();\n            }\n            else if (_this.state === STATE.PAN) {\n                if (_this.enablePan === false)\n                    return;\n                _this.panEnd.set(event.clientX, event.clientY);\n                _this.panDelta.subVectors(_this.panEnd, _this.panStart);\n                _this.pan(_this.panDelta.x, _this.panDelta.y);\n                _this.panStart.copy(_this.panEnd);\n                _this.update();\n            }\n        };\n        _this.onMouseUp = function (event) {\n            if (_this.enabled === false)\n                return;\n            document.removeEventListener('mousemove', _this.onMouseMove, false);\n            document.removeEventListener('mouseup', _this.onMouseUp, false);\n            _this.dispatchEvent(END_EVENT);\n            _this.state = STATE.NONE;\n        };\n        _this.onMouseWheel = function (event) {\n            if (_this.enabled === false || _this.enableZoom === false || (_this.state !== STATE.NONE && _this.state !== STATE.ROTATE))\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            if (event.deltaY < 0) {\n                _this.dollyOut(_this.getZoomScale());\n            }\n            else if (event.deltaY > 0) {\n                _this.dollyIn(_this.getZoomScale());\n            }\n            _this.update();\n            _this.dispatchEvent(START_EVENT); // not sure why these are here...\n            _this.dispatchEvent(END_EVENT);\n        };\n        _this.onKeyDown = function (event) {\n            if (_this.enabled === false || _this.enableKeys === false || _this.enablePan === false)\n                return;\n            switch (event.keyCode) {\n                case _this.keys.UP:\n                    {\n                        _this.pan(0, _this.keyPanSpeed);\n                        _this.update();\n                    }\n                    break;\n                case _this.keys.BOTTOM:\n                    {\n                        _this.pan(0, -_this.keyPanSpeed);\n                        _this.update();\n                    }\n                    break;\n                case _this.keys.LEFT:\n                    {\n                        _this.pan(_this.keyPanSpeed, 0);\n                        _this.update();\n                    }\n                    break;\n                case _this.keys.RIGHT:\n                    {\n                        _this.pan(-_this.keyPanSpeed, 0);\n                        _this.update();\n                    }\n                    break;\n            }\n        };\n        _this.onTouchStart = function (event) {\n            if (_this.enabled === false)\n                return;\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1:\n                    {\n                        if (_this.enableRotate === false)\n                            return;\n                        _this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                        _this.state = STATE.TOUCH_ROTATE;\n                    }\n                    break;\n                // two-fingered touch: dolly\n                case 2:\n                    {\n                        if (_this.enableZoom === false)\n                            return;\n                        var dx = event.touches[0].pageX - event.touches[1].pageX;\n                        var dy = event.touches[0].pageY - event.touches[1].pageY;\n                        var distance = Math.sqrt(dx * dx + dy * dy);\n                        _this.dollyStart.set(0, distance);\n                        _this.state = STATE.TOUCH_DOLLY;\n                    }\n                    break;\n                // three-fingered touch: pan\n                case 3:\n                    {\n                        if (_this.enablePan === false)\n                            return;\n                        _this.panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                        _this.state = STATE.TOUCH_PAN;\n                    }\n                    break;\n                default: {\n                    _this.state = STATE.NONE;\n                }\n            }\n            if (_this.state !== STATE.NONE) {\n                _this.dispatchEvent(START_EVENT);\n            }\n        };\n        _this.onTouchMove = function (event) {\n            if (_this.enabled === false)\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.touches.length) {\n                // one-fingered touch: rotate\n                case 1:\n                    {\n                        if (_this.enableRotate === false)\n                            return;\n                        if (_this.state !== STATE.TOUCH_ROTATE)\n                            return; // is this needed?...\n                        _this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                        _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart);\n                        var element = _this.domElement === document ? _this.domElement.body : _this.domElement;\n                        // rotating across whole screen goes 360 degrees around\n                        _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientWidth * _this.rotateSpeed);\n                        // rotating up and down along whole screen attempts to go 360, but limited to 180\n                        _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight * _this.rotateSpeed);\n                        _this.rotateStart.copy(_this.rotateEnd);\n                        _this.update();\n                    }\n                    break;\n                // two-fingered touch: dolly\n                case 2:\n                    {\n                        if (_this.enableZoom === false)\n                            return;\n                        if (_this.state !== STATE.TOUCH_DOLLY)\n                            return; // is this needed?...\n                        //console.log( 'handleTouchMoveDolly' );\n                        var dx = event.touches[0].pageX - event.touches[1].pageX;\n                        var dy = event.touches[0].pageY - event.touches[1].pageY;\n                        var distance = Math.sqrt(dx * dx + dy * dy);\n                        _this.dollyEnd.set(0, distance);\n                        _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n                        if (_this.dollyDelta.y > 0) {\n                            _this.dollyOut(_this.getZoomScale());\n                        }\n                        else if (_this.dollyDelta.y < 0) {\n                            _this.dollyIn(_this.getZoomScale());\n                        }\n                        _this.dollyStart.copy(_this.dollyEnd);\n                        _this.update();\n                    }\n                    break;\n                // three-fingered touch: pan\n                case 3:\n                    {\n                        if (_this.enablePan === false)\n                            return;\n                        if (_this.state !== STATE.TOUCH_PAN)\n                            return; // is this needed?...\n                        _this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                        _this.panDelta.subVectors(_this.panEnd, _this.panStart);\n                        _this.pan(_this.panDelta.x, _this.panDelta.y);\n                        _this.panStart.copy(_this.panEnd);\n                        _this.update();\n                    }\n                    break;\n                default: {\n                    _this.state = STATE.NONE;\n                }\n            }\n        };\n        _this.onTouchEnd = function (event) {\n            if (_this.enabled === false)\n                return;\n            _this.dispatchEvent(END_EVENT);\n            _this.state = STATE.NONE;\n        };\n        _this.onContextMenu = function (event) {\n            event.preventDefault();\n        };\n        _this.domElement.addEventListener('contextmenu', _this.onContextMenu, false);\n        _this.domElement.addEventListener('mousedown', _this.onMouseDown, false);\n        _this.domElement.addEventListener('wheel', _this.onMouseWheel, false);\n        _this.domElement.addEventListener('touchstart', _this.onTouchStart, false);\n        _this.domElement.addEventListener('touchend', _this.onTouchEnd, false);\n        _this.domElement.addEventListener('touchmove', _this.onTouchMove, false);\n        _this.window.addEventListener('keydown', _this.onKeyDown, false);\n        // force an update at start\n        _this.update();\n        return _this;\n    }\n    OrbitControls.prototype.update = function () {\n        var position = this.object.position;\n        this.updateOffset.copy(position).sub(this.target);\n        // rotate offset to \"y-axis-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuat);\n        // angle from z-axis around y-axis\n        this.spherical.setFromVector3(this.updateOffset);\n        if (this.autoRotate && this.state === STATE.NONE) {\n            this.rotateLeft(this.getAutoRotationAngle());\n        }\n        this.spherical.theta += this.sphericalDelta.theta;\n        this.spherical.phi += this.sphericalDelta.phi;\n        // restrict theta to be between desired limits\n        this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta));\n        // restrict phi to be between desired limits\n        this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi));\n        this.spherical.makeSafe();\n        this.spherical.radius *= this.scale;\n        // restrict radius to be between desired limits\n        this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius));\n        // move target to panned location\n        this.target.add(this.panOffset);\n        this.updateOffset.setFromSpherical(this.spherical);\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        this.updateOffset.applyQuaternion(this.updateQuatInverse);\n        position.copy(this.target).add(this.updateOffset);\n        this.object.lookAt(this.target);\n        if (this.enableDamping === true) {\n            this.sphericalDelta.theta *= (1 - this.dampingFactor);\n            this.sphericalDelta.phi *= (1 - this.dampingFactor);\n        }\n        else {\n            this.sphericalDelta.set(0, 0, 0);\n        }\n        this.scale = 1;\n        this.panOffset.set(0, 0, 0);\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n        if (this.zoomChanged ||\n            this.updateLastPosition.distanceToSquared(this.object.position) > EPS ||\n            8 * (1 - this.updateLastQuaternion.dot(this.object.quaternion)) > EPS) {\n            this.dispatchEvent(CHANGE_EVENT);\n            this.updateLastPosition.copy(this.object.position);\n            this.updateLastQuaternion.copy(this.object.quaternion);\n            this.zoomChanged = false;\n            return true;\n        }\n        return false;\n    };\n    OrbitControls.prototype.panLeft = function (distance, objectMatrix) {\n        this.panLeftV.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        this.panLeftV.multiplyScalar(-distance);\n        this.panOffset.add(this.panLeftV);\n    };\n    OrbitControls.prototype.panUp = function (distance, objectMatrix) {\n        this.panUpV.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        this.panUpV.multiplyScalar(distance);\n        this.panOffset.add(this.panUpV);\n    };\n    // deltaX and deltaY are in pixels; right and down are positive\n    OrbitControls.prototype.pan = function (deltaX, deltaY) {\n        var element = this.domElement === document ? this.domElement.body : this.domElement;\n        if (this.object instanceof THREE.PerspectiveCamera) {\n            // perspective\n            var position = this.object.position;\n            this.panInternalOffset.copy(position).sub(this.target);\n            var targetDistance = this.panInternalOffset.length();\n            // half of the fov is center to top of screen\n            targetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0);\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this.panLeft(2 * deltaX * targetDistance / element.clientHeight, this.object.matrix);\n            this.panUp(2 * deltaY * targetDistance / element.clientHeight, this.object.matrix);\n        }\n        else if (this.object instanceof THREE.OrthographicCamera) {\n            // orthographic\n            this.panLeft(deltaX * (this.object.right - this.object.left) / this.object.zoom / element.clientWidth, this.object.matrix);\n            this.panUp(deltaY * (this.object.top - this.object.bottom) / this.object.zoom / element.clientHeight, this.object.matrix);\n        }\n        else {\n            // camera neither orthographic nor perspective\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            this.enablePan = false;\n        }\n    };\n    OrbitControls.prototype.dollyIn = function (dollyScale) {\n        if (this.object instanceof THREE.PerspectiveCamera) {\n            this.scale /= dollyScale;\n        }\n        else if (this.object instanceof THREE.OrthographicCamera) {\n            this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n            this.object.updateProjectionMatrix();\n            this.zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            this.enableZoom = false;\n        }\n    };\n    OrbitControls.prototype.dollyOut = function (dollyScale) {\n        if (this.object instanceof THREE.PerspectiveCamera) {\n            this.scale *= dollyScale;\n        }\n        else if (this.object instanceof THREE.OrthographicCamera) {\n            this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n            this.object.updateProjectionMatrix();\n            this.zoomChanged = true;\n        }\n        else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            this.enableZoom = false;\n        }\n    };\n    OrbitControls.prototype.getAutoRotationAngle = function () {\n        return 2 * Math.PI / 60 / 60 * this.autoRotateSpeed;\n    };\n    OrbitControls.prototype.getZoomScale = function () {\n        return Math.pow(0.95, this.zoomSpeed);\n    };\n    OrbitControls.prototype.rotateLeft = function (angle) {\n        this.sphericalDelta.theta -= angle;\n    };\n    OrbitControls.prototype.rotateUp = function (angle) {\n        this.sphericalDelta.phi -= angle;\n    };\n    OrbitControls.prototype.getPolarAngle = function () {\n        return this.spherical.phi;\n    };\n    OrbitControls.prototype.getAzimuthalAngle = function () {\n        return this.spherical.theta;\n    };\n    OrbitControls.prototype.dispose = function () {\n        this.domElement.removeEventListener('contextmenu', this.onContextMenu, false);\n        this.domElement.removeEventListener('mousedown', this.onMouseDown, false);\n        this.domElement.removeEventListener('wheel', this.onMouseWheel, false);\n        this.domElement.removeEventListener('touchstart', this.onTouchStart, false);\n        this.domElement.removeEventListener('touchend', this.onTouchEnd, false);\n        this.domElement.removeEventListener('touchmove', this.onTouchMove, false);\n        document.removeEventListener('mousemove', this.onMouseMove, false);\n        document.removeEventListener('mouseup', this.onMouseUp, false);\n        this.window.removeEventListener('keydown', this.onKeyDown, false);\n        //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n    OrbitControls.prototype.reset = function () {\n        this.target.copy(this.target0);\n        this.object.position.copy(this.position0);\n        this.object.zoom = this.zoom0;\n        this.object.updateProjectionMatrix();\n        this.dispatchEvent(CHANGE_EVENT);\n        this.update();\n        this.state = STATE.NONE;\n    };\n    Object.defineProperty(OrbitControls.prototype, \"center\", {\n        // backward compatibility\n        get: function () {\n            console.warn('THREE.OrbitControls: .center has been renamed to .target');\n            return this.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OrbitControls.prototype, \"noZoom\", {\n        get: function () {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            return !this.enableZoom;\n        },\n        set: function (value) {\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            this.enableZoom = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return OrbitControls;\n}(THREE.EventDispatcher));\nexports.OrbitControls = OrbitControls;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}