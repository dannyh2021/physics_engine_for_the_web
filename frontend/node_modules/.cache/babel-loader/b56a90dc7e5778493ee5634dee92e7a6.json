{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground2.tsx\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Vector3 } from \"three\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 100);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Playground2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.scene = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null; // bindings\n\n    this.onRestart = this.onRestart.bind(this);\n    this.onResume = this.onResume.bind(this);\n    this.onPause = this.onPause.bind(this);\n  }\n\n  componentDidMount() {\n    // graphics\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement); //this.w.startLoop();\n\n    this.setUp();\n    this.onVisualize();\n  }\n\n  initialize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n\n    this.w = new World();\n    this.scene = new THREE.Scene(); // set up objects\n\n    const sphere = new Sphere(new Vector3(0, 0, 20), 5);\n    sphere.velocity = new Vector3(0, 0, 0);\n    this.w.addObject(sphere); // add object meshes and bounding box meshes to scene\n\n    for (let object of this.w.objects) {\n      this.scene.add(object.mesh); //this.scene.add(object.boundingBoxMesh);\n    } // add gridHelper\n\n\n    const gridHelper = new THREE.GridHelper(100, 10);\n    gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n    this.scene.add(gridHelper); // add lighting\n\n    this.scene.add(point_light, ambient_light);\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n\n    const renderer = this.renderer;\n    const scene = this.scene;\n    const world = this.w;\n    const objects = world.objects;\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      const scene = new THREE.Scene();\n      scene.add(point_light, ambient_light);\n      const objects = currentInstance.w.objects;\n\n      for (let object of objects) {\n        if (object instanceof Sphere) {\n          const sphere_geometry = new THREE.SphereGeometry(object.radius);\n          const material = new THREE.MeshPhongMaterial({\n            color: 0x00bcd6\n          });\n          const sphere = new THREE.Mesh(sphere_geometry, material);\n          sphere.position.set(object.position.x, object.position.y, object.position.z);\n          scene.add(sphere);\n        } else if (object instanceof Box) {\n          const box_geometry = new THREE.BoxGeometry(object.width, object.length, object.height);\n          const material = new THREE.MeshPhongMaterial({\n            color: 0x00bcd6\n          });\n          const box = new THREE.Mesh(box_geometry, material);\n          box.position.set(object.position.x, object.position.y, object.position.z);\n          scene.add(box);\n        } else {\n          console.log(\"onVisualize on unknown object\");\n        }\n\n        const rotation = object.rotation;\n        console.log(\"rotation: \", rotation.elements);\n      } // add gridHelper\n\n\n      const gridHelper = new THREE.GridHelper(100, 10);\n      gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n      scene.add(gridHelper);\n      camera.lookAt(0, 0, 0);\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  onRestart() {\n    this.initialize();\n    this.onVisualize();\n  }\n\n  onResume() {\n    this.onVisualize();\n  }\n\n  onPause() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playground page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onRestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onResume,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onPause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","THREE","OrbitControls","Vector3","World","Sphere","Box","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Playground2","Component","constructor","props","canvasRef","w","renderer","animationRequestID","scene","createRef","onRestart","bind","onResume","onPause","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","setUp","onVisualize","initialize","cancelAnimationFrame","Scene","sphere","velocity","addObject","object","objects","add","mesh","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","world","currentInstance","animate","requestAnimationFrame","sphere_geometry","SphereGeometry","radius","material","MeshPhongMaterial","color","Mesh","x","y","z","box_geometry","BoxGeometry","width","length","height","box","console","log","rotation","elements","lookAt","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground2.tsx"],"sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Matrix4, Vector3 } from \"three\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 100);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Playground2 extends React.Component {\n    private canvasRef: any;\n\n    private w: World;\n\n    private renderer: any;\n    private animationRequestID: any;\n    private scene: THREE.Scene;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        // bindings\n        this.onRestart = this.onRestart.bind(this);\n        this.onResume = this.onResume.bind(this);\n        this.onPause = this.onPause.bind(this);\n    }\n\n    componentDidMount(): void {\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        //this.w.startLoop();\n        this.setUp();\n        this.onVisualize();\n    }\n\n    initialize(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        this.w = new World();\n        this.scene = new THREE.Scene();\n\n        // set up objects\n        const sphere = new Sphere(new Vector3(0, 0, 20), 5);\n        sphere.velocity = new Vector3(0, 0, 0);\n\n        this.w.addObject(sphere);\n\n        // add object meshes and bounding box meshes to scene\n        for (let object of this.w.objects) {\n            this.scene.add(object.mesh);\n            //this.scene.add(object.boundingBoxMesh);\n        }\n\n        // add gridHelper\n        const gridHelper = new THREE.GridHelper( 100, 10 );\n        gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI/2);\n        this.scene.add(gridHelper);\n\n        // add lighting\n        this.scene.add(point_light, ambient_light);\n    }\n\n    onVisualize(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        const renderer = this.renderer;\n        const scene = this.scene;\n        const world = this.w;\n        const objects = world.objects;\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n\n            const scene = new THREE.Scene();\n            scene.add(point_light, ambient_light);\n\n            const objects = currentInstance.w.objects;\n            for (let object of objects) {\n                if (object instanceof Sphere) {\n                    const sphere_geometry = new THREE.SphereGeometry(object.radius);\n                    const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n                    const sphere = new THREE.Mesh(sphere_geometry, material);\n                    sphere.position.set(object.position.x, object.position.y, object.position.z);\n                    scene.add(sphere);\n                } else if (object instanceof Box) {\n                    const box_geometry = new THREE.BoxGeometry(object.width, object.length, object.height);\n                    const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n                    const box = new THREE.Mesh(box_geometry, material);\n                    box.position.set(object.position.x, object.position.y, object.position.z);\n                    scene.add(box);\n                } else {\n                    console.log(\"onVisualize on unknown object\");\n                }\n\n                const rotation = object.rotation;\n                console.log(\"rotation: \", rotation.elements);\n            }\n\n            // add gridHelper\n            const gridHelper = new THREE.GridHelper( 100, 10 );\n            gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n            scene.add(gridHelper);\n            \n            camera.lookAt(0, 0, 0);\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    onRestart(): void {\n        this.initialize();\n        this.onVisualize();\n    }\n\n    onResume(): void {\n        this.onVisualize();\n    }\n\n    onPause(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"playground2\">\n                <h2>Playground page desu...</h2>\n                <button onClick={this.onRestart}>Restart</button>\n                <button onClick={this.onResume}>Resume</button>\n                <button onClick={this.onPause}>Pause</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}