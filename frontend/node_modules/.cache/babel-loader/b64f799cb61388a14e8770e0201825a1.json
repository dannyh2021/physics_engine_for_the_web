{"ast":null,"code":"import { Vector3 } from \"three\";\nimport { Sphere } from \"./Sphere\"; // import { Sphere } from \"three\";\n\nexport class World {\n  constructor() {\n    this.objects = [];\n    this.currentLoopInterval = null;\n    this.characterForce = void 0;\n    this.objects = [];\n    this.characterForce = new Vector3(0, 0, 0);\n  }\n\n  startGameLoop() {\n    const s = new Sphere(new Vector3(0, 0, 0), 3);\n    const s2 = new Sphere(new Vector3(10, 0, 0), 3);\n    const s3 = new Sphere(new Vector3(0, 5, 0), 3);\n    this.objects = [];\n    this.objects.push(s);\n    this.objects.push(s2); //this.objects.push(s3);\n\n    this.clearCurrentLoop();\n    let lastCalledTime = performance.now(); // returns timestamp in ms\n\n    let fps = 0;\n    let times = [];\n    let i = 0; // this.currentLoopInterval = setInterval(() => {i++; console.log(i)}, 1000);\n\n    const currentInstance = this;\n\n    function animate() {\n      requestAnimationFrame(animate);\n      s.forceAccum.add(currentInstance.characterForce);\n      currentInstance.characterForce = new Vector3(0, 0, 0);\n      s.integrate(1 / 60);\n    }\n\n    animate();\n  }\n\n  getObjects() {\n    return this.objects;\n  }\n\n  updateCharacterForce(f) {\n    this.characterForce = f;\n  }\n\n  detectCollisions() {}\n\n  clearCurrentLoop() {\n    clearInterval(this.currentLoopInterval);\n  }\n\n}","map":{"version":3,"names":["Vector3","Sphere","World","constructor","objects","currentLoopInterval","characterForce","startGameLoop","s","s2","s3","push","clearCurrentLoop","lastCalledTime","performance","now","fps","times","i","currentInstance","animate","requestAnimationFrame","forceAccum","add","integrate","getObjects","updateCharacterForce","f","detectCollisions","clearInterval"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/physics_engine/physics_engine.ts"],"sourcesContent":["import { Vector3 } from \"three\";\nimport * as THREE from \"three\";\nimport { Sphere } from \"./Sphere\";\n// import { Sphere } from \"three\";\n\nexport class World {\n    private objects: any[] = [];\n    private currentLoopInterval: any = null;\n\n    private characterForce: Vector3;\n\n    constructor() {\n        this.objects = [];\n\n        this.characterForce = new Vector3(0, 0, 0);\n    }\n\n    startGameLoop(): void {\n        const s = new Sphere(new Vector3(0, 0, 0), 3);\n        const s2 = new Sphere(new Vector3(10, 0, 0), 3);\n        const s3 = new Sphere(new Vector3(0, 5, 0), 3);\n        \n        this.objects = [];\n        this.objects.push(s);\n        this.objects.push(s2);\n        //this.objects.push(s3);\n\n        this.clearCurrentLoop();\n\n        let lastCalledTime = performance.now() // returns timestamp in ms\n        let fps = 0;\n        let times = [];\n\n        let i = 0;\n        // this.currentLoopInterval = setInterval(() => {i++; console.log(i)}, 1000);\n\n        const currentInstance = this;\n        function animate(): void {\n            requestAnimationFrame(animate);\n\n            s.forceAccum.add(currentInstance.characterForce);\n            currentInstance.characterForce = new Vector3(0, 0, 0);\n\n            s.integrate(1/60);\n        }\n        animate();\n    }\n\n    getObjects(): any[] {\n        return this.objects;\n    }\n\n    updateCharacterForce(f: Vector3) {\n        this.characterForce = f;\n    }\n\n    detectCollisions(): void {\n\n    }\n\n    clearCurrentLoop(): void {\n        clearInterval(this.currentLoopInterval);\n    }\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,MAAT,QAAuB,UAAvB,C,CACA;;AAEA,OAAO,MAAMC,KAAN,CAAY;EAMfC,WAAW,GAAG;IAAA,KALNC,OAKM,GALW,EAKX;IAAA,KAJNC,mBAIM,GAJqB,IAIrB;IAAA,KAFNC,cAEM;IACV,KAAKF,OAAL,GAAe,EAAf;IAEA,KAAKE,cAAL,GAAsB,IAAIN,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAtB;EACH;;EAEDO,aAAa,GAAS;IAClB,MAAMC,CAAC,GAAG,IAAIP,MAAJ,CAAW,IAAID,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAX,EAAiC,CAAjC,CAAV;IACA,MAAMS,EAAE,GAAG,IAAIR,MAAJ,CAAW,IAAID,OAAJ,CAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,CAAX,EAAkC,CAAlC,CAAX;IACA,MAAMU,EAAE,GAAG,IAAIT,MAAJ,CAAW,IAAID,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAX,EAAiC,CAAjC,CAAX;IAEA,KAAKI,OAAL,GAAe,EAAf;IACA,KAAKA,OAAL,CAAaO,IAAb,CAAkBH,CAAlB;IACA,KAAKJ,OAAL,CAAaO,IAAb,CAAkBF,EAAlB,EAPkB,CAQlB;;IAEA,KAAKG,gBAAL;IAEA,IAAIC,cAAc,GAAGC,WAAW,CAACC,GAAZ,EAArB,CAZkB,CAYqB;;IACvC,IAAIC,GAAG,GAAG,CAAV;IACA,IAAIC,KAAK,GAAG,EAAZ;IAEA,IAAIC,CAAC,GAAG,CAAR,CAhBkB,CAiBlB;;IAEA,MAAMC,eAAe,GAAG,IAAxB;;IACA,SAASC,OAAT,GAAyB;MACrBC,qBAAqB,CAACD,OAAD,CAArB;MAEAZ,CAAC,CAACc,UAAF,CAAaC,GAAb,CAAiBJ,eAAe,CAACb,cAAjC;MACAa,eAAe,CAACb,cAAhB,GAAiC,IAAIN,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjC;MAEAQ,CAAC,CAACgB,SAAF,CAAY,IAAE,EAAd;IACH;;IACDJ,OAAO;EACV;;EAEDK,UAAU,GAAU;IAChB,OAAO,KAAKrB,OAAZ;EACH;;EAEDsB,oBAAoB,CAACC,CAAD,EAAa;IAC7B,KAAKrB,cAAL,GAAsBqB,CAAtB;EACH;;EAEDC,gBAAgB,GAAS,CAExB;;EAEDhB,gBAAgB,GAAS;IACrBiB,aAAa,CAAC,KAAKxB,mBAAN,CAAb;EACH;;AAzDc"},"metadata":{},"sourceType":"module"}