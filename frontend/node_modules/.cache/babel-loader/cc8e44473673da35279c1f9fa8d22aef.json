{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playground/Playground.tsx\";\nimport React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Playground extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null;\n  }\n\n  componentDidMount() {\n    this.w = new World(); // graphics\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement);\n    this.w.startLoop();\n    this.onVisualize();\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      const scene = new THREE.Scene();\n      scene.add(point_light, ambient_light);\n      const objects = currentInstance.w.getObjects();\n\n      for (let object of objects) {\n        if (object instanceof Sphere) {\n          const sphere_geometry = new THREE.SphereGeometry(object.radius);\n          const material = new THREE.MeshPhongMaterial({\n            color: 0x00bcd6\n          });\n          const sphere = new THREE.Mesh(sphere_geometry, material);\n          sphere.position.set(object.position.x, object.position.y, object.position.z);\n          scene.add(sphere);\n        }\n      } // add gridHelper\n\n\n      const gridHelper = new THREE.GridHelper(100, 10);\n      gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n      scene.add(gridHelper);\n      camera.lookAt(0, 0, 0);\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playground page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","World","THREE","Vector3","Sphere","OrbitControls","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Playground","Component","constructor","props","canvasRef","w","renderer","animationRequestID","createRef","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","startLoop","onVisualize","cancelAnimationFrame","currentInstance","animate","requestAnimationFrame","scene","Scene","add","objects","getObjects","object","sphere_geometry","SphereGeometry","radius","material","MeshPhongMaterial","color","sphere","Mesh","x","y","z","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","lookAt","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playground/Playground.tsx"],"sourcesContent":["import React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Playground extends React.Component {\n    canvasRef: any;\n    private w: World;\n    private renderer: any;\n    private animationRequestID: any;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n    }\n\n    componentDidMount(): void {\n        this.w = new World();\n\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        this.w.startLoop();\n        this.onVisualize();\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n\n            const scene = new THREE.Scene();\n            scene.add(point_light, ambient_light);\n\n            const objects = currentInstance.w.getObjects();\n            for (let object of objects) {\n                if (object instanceof Sphere) {\n                    const sphere_geometry = new THREE.SphereGeometry(object.radius);\n                    const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n                    const sphere = new THREE.Mesh(sphere_geometry, material);\n                    sphere.position.set(object.position.x, object.position.y, object.position.z);\n                    scene.add(sphere);\n                }\n            }\n\n            // add gridHelper\n            const gridHelper = new THREE.GridHelper( 100, 10 );\n            gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n            scene.add(gridHelper);\n            \n            camera.lookAt(0, 0, 0);\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    render() {\n        return (\n            <div className=\"playground\">\n                <h2>Playground page desu...</h2>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}