{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import*as THREE from\"three\";import{OrbitControls}from\"three-orbitcontrols-ts\";import{Vector3}from\"three\";import{World,Sphere,Box,Plane}from\"../physics_engine/physics_engine\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CANVAS_WIDTH=1000;var CANVAS_HEIGHT=500;// camera\nvar camera=new THREE.PerspectiveCamera(45,CANVAS_WIDTH/CANVAS_HEIGHT,1,1000);camera.position.set(0,-CANVAS_HEIGHT/6,CANVAS_HEIGHT/6);camera.up.set(0,1,0);// add lighting\nvar light_color=0xffffff;var intensity=1;var point_light=new THREE.PointLight(light_color,intensity);point_light.position.set(10,10,50);var ambient_light=new THREE.AmbientLight(light_color,0.2);var Demo3=/*#__PURE__*/function(_React$Component){_inherits(Demo3,_React$Component);var _super=_createSuper(Demo3);function Demo3(props){var _this;_classCallCheck(this,Demo3);_this=_super.call(this,props);_this.canvasRef=void 0;_this.w=void 0;_this.renderer=void 0;_this.animationRequestID=void 0;_this.scene=void 0;_this.canvasRef=/*#__PURE__*/React.createRef();_this.w=new World();// graphics\n_this.renderer=null;_this.animationRequestID=null;// bindings\n_this.onRestart=_this.onRestart.bind(_assertThisInitialized(_this));_this.onResume=_this.onResume.bind(_assertThisInitialized(_this));_this.onPause=_this.onPause.bind(_assertThisInitialized(_this));return _this;}_createClass(Demo3,[{key:\"componentDidMount\",value:function componentDidMount(){// graphics\nthis.renderer=new THREE.WebGLRenderer({canvas:this.canvasRef.current,alpha:false});this.renderer.setSize(CANVAS_WIDTH,CANVAS_HEIGHT);// orbit controls\nvar controls=new OrbitControls(camera,this.renderer.domElement);this.initialize();this.onVisualize();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.renderer){this.renderer=null;}if(this.animationRequestID){cancelAnimationFrame(this.animationRequestID);}}},{key:\"initialize\",value:function initialize(){// cancel ongoing animation\nif(this.animationRequestID){cancelAnimationFrame(this.animationRequestID);}this.w=new World();this.scene=new THREE.Scene();// set up objects\nvar s=new Sphere(new Vector3(-70,0,40),8);s.velocity=new Vector3(30,0,0);this.w.addObject(s);// add pyramid of boxes\nvar height=7.5;for(var i=0;i<2;i++){for(var j=0;j<2;j++){var box=new Box(new Vector3(i*25+5,j*17-7.5,height),15,15,20);this.w.addObject(box);}}height+=15;var box1=new Box(new Vector3(15,0,height),14,14,15);// this.w.addObject(box1);\nheight+=15;var wall=new Box(new Vector3(50,0,25),5,80,50);this.w.addObject(wall);// rotating cubes on corners\nvar corners=[];corners.push(new Vector3(-55,55,40),new Vector3(-55,-55,40),new Vector3(55,55,40),new Vector3(55,-55,40));for(var _i=0,_corners=corners;_i<_corners.length;_i++){var corner=_corners[_i];var rotatingCube=new Box(corner,10,10,10);rotatingCube.angularMomentum=new Vector3(1,1,5).applyMatrix3(rotatingCube.getInertia());this.w.addObject(rotatingCube);}// add some bouncing balls at the top and bottom\nvar sides=[];sides.push(new Vector3(0,55,40),new Vector3(0,-55,40));for(var _i2=0,_sides=sides;_i2<_sides.length;_i2++){var side=_sides[_i2];var bouncingBall=new Sphere(side,5);this.w.addObject(bouncingBall);}// add plane\nvar plane=new Plane(new Vector3(0,0,0),new Vector3(0,0,1),1000,1000);this.w.addObject(plane);// add object meshes and bounding box meshes to scene\nvar _iterator=_createForOfIteratorHelper(this.w.objects),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var object=_step.value;this.scene.add(object.mesh);}// add gridHelper\n}catch(err){_iterator.e(err);}finally{_iterator.f();}var gridHelper=new THREE.GridHelper(100,10);gridHelper.rotateOnWorldAxis(new Vector3(1,0,0),Math.PI/2);this.scene.add(gridHelper);// add lighting\nthis.scene.add(point_light,ambient_light);}},{key:\"onVisualize\",value:function onVisualize(){// cancel ongoing animation\nif(this.animationRequestID){cancelAnimationFrame(this.animationRequestID);}var renderer=this.renderer;var scene=this.scene;var world=this.w;var objects=world.objects;var boundingBoxIntersections;var contacts;var currentInstance=this;function animate(){currentInstance.animationRequestID=requestAnimationFrame(animate);// add gravity\nvar _iterator2=_createForOfIteratorHelper(objects),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var object=_step2.value;if(object instanceof Plane){continue;}var mass=1/object.inverseMass;object.forceAccum.addScaledVector(new Vector3(0,0,-1),mass*10);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}world.tick(1/60);// graphics step\nworld.updateMeshes();currentInstance.renderer.render(scene,camera);}animate();}},{key:\"onRestart\",value:function onRestart(){this.initialize();this.onVisualize();}},{key:\"onResume\",value:function onResume(){this.onVisualize();}},{key:\"onPause\",value:function onPause(){// cancel ongoing animation\nif(this.animationRequestID){cancelAnimationFrame(this.animationRequestID);}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"demo2\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Demo 3\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This scene shows how the physics engine simulates constrained dynamics. The sphere, set with some initial velocity, is launched into a small pile of cubes, and all objects are accelerated by the force of gravity. The engine may be extended to become part of physics-based game, such as one involving ballistics.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.onRestart,children:\"Restart\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.onResume,children:\"Resume\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.onPause,children:\"Pause\"}),/*#__PURE__*/_jsx(\"div\",{id:\"canvas_container\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:this.canvasRef,width:CANVAS_WIDTH,height:CANVAS_HEIGHT})})]});}}]);return Demo3;}(React.Component);export{Demo3 as default};","map":{"version":3,"names":["React","THREE","OrbitControls","Vector3","World","Sphere","Box","Plane","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Demo3","props","canvasRef","w","renderer","animationRequestID","scene","createRef","onRestart","bind","onResume","onPause","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","initialize","onVisualize","cancelAnimationFrame","Scene","s","velocity","addObject","height","i","j","box","box1","wall","corners","push","corner","rotatingCube","angularMomentum","applyMatrix3","getInertia","sides","side","bouncingBall","plane","objects","object","add","mesh","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","world","boundingBoxIntersections","contacts","currentInstance","animate","requestAnimationFrame","mass","inverseMass","forceAccum","addScaledVector","tick","updateMeshes","render","Component"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Demos/Demo3.tsx"],"sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Matrix4, Vector3 } from \"three\";\nimport { World, Sphere, Box, Plane } from \"../physics_engine/physics_engine\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, -CANVAS_HEIGHT / 6, CANVAS_HEIGHT / 6);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 50);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Demo3 extends React.Component {\n    private canvasRef: any;\n\n    private w: World;\n\n    private renderer: any;\n    private animationRequestID: any;\n    private scene: THREE.Scene;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        // bindings\n        this.onRestart = this.onRestart.bind(this);\n        this.onResume = this.onResume.bind(this);\n        this.onPause = this.onPause.bind(this);\n    }\n\n    componentDidMount(): void {\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        this.initialize();\n        this.onVisualize();\n    }\n\n    componentWillUnmount() {\n        if(this.renderer) {\n            this.renderer = null;\n        }\n\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n    }\n\n    initialize(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        this.w = new World();\n        this.scene = new THREE.Scene();\n\n        // set up objects\n        const s = new Sphere(new Vector3(-70, 0, 40), 8);\n        s.velocity = new Vector3(30, 0, 0);\n\n        this.w.addObject(s);\n\n        // add pyramid of boxes\n        let height = 7.5;\n        for (let i = 0; i < 2 ; i++) {\n            for (let j = 0; j < 2; j++) {\n                const box = new Box(new Vector3(i * 25 + 5, j*17 - 7.5, height), 15, 15, 20);\n                this.w.addObject(box);\n            }\n        }\n        height += 15;\n        const box1 = new Box(new Vector3(15, 0, height), 14, 14, 15);\n        // this.w.addObject(box1);\n        height += 15;\n        \n        const wall = new Box(new Vector3(50, 0, 25), 5, 80, 50);\n\n        this.w.addObject(wall);\n\n        // rotating cubes on corners\n        const corners = [];\n        corners.push(new Vector3(-55, 55, 40), new Vector3(-55, -55, 40), new Vector3(55, 55, 40), new Vector3(55, -55, 40));\n        for (let corner of corners) {\n            const rotatingCube = new Box(corner, 10, 10, 10);\n            rotatingCube.angularMomentum = new Vector3(1, 1, 5).applyMatrix3(rotatingCube.getInertia());\n            this.w.addObject(rotatingCube);\n        }\n\n        // add some bouncing balls at the top and bottom\n        const sides =[];\n        sides.push(new Vector3(0, 55, 40), new Vector3(0, -55, 40));\n        for (let side of sides) {\n            const bouncingBall = new Sphere(side, 5);\n            this.w.addObject(bouncingBall);\n        }\n\n        // add plane\n        const plane = new Plane(new Vector3(0, 0, 0), new Vector3(0, 0, 1), 1000, 1000);\n        this.w.addObject(plane);\n\n        // add object meshes and bounding box meshes to scene\n        for (let object of this.w.objects) {\n            this.scene.add(object.mesh);\n        }\n\n        // add gridHelper\n        const gridHelper = new THREE.GridHelper( 100, 10 );\n        gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI/2);\n        this.scene.add(gridHelper);\n\n        // add lighting\n        this.scene.add(point_light, ambient_light);\n    }\n\n    onVisualize(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        const renderer = this.renderer;\n        const scene = this.scene;\n        const world = this.w;\n        const objects = world.objects;\n\n        let boundingBoxIntersections;\n        let contacts;\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n\n            // add gravity\n            for (let object of objects) {\n                if (object instanceof Plane) {\n                    continue;\n                }\n\n                const mass = 1/object.inverseMass;\n                object.forceAccum.addScaledVector(new Vector3(0, 0, -1), mass * 10);\n            }\n\n            world.tick(1/60);\n\n            // graphics step\n            world.updateMeshes();\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    onRestart(): void {\n        this.initialize();\n        this.onVisualize();\n    }\n\n    onResume(): void {\n        this.onVisualize();\n    }\n\n    onPause(): void {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"demo2\">\n                <h2>Demo 3</h2>\n                <p>This scene shows how the physics engine simulates constrained dynamics. The sphere, set with some initial velocity, is launched into a small pile of cubes, and all objects are accelerated by the force of gravity. The engine may be extended to become part of physics-based game, such as one involving ballistics.</p>\n                <button onClick={this.onRestart}>Restart</button>\n                <button onClick={this.onResume}>Resume</button>\n                <button onClick={this.onPause}>Pause</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}