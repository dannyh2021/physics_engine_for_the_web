{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onBFCacheRestore } from './lib/onBFCacheRestore.js';\nexport const getFCP = (onReport, reportAllChanges) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  let metric = initMetric('FCP');\n  let report;\n\n  const entryHandler = entry => {\n    if (entry.name === 'first-contentful-paint') {\n      if (po) {\n        po.disconnect();\n      } // Only report if the page wasn't hidden prior to the first paint.\n\n\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    }\n  }; // TODO(philipwalton): remove the use of `fcpEntry` once this bug is fixed.\n  // https://bugs.webkit.org/show_bug.cgi?id=225305\n  // The check for `getEntriesByName` is needed to support Opera:\n  // https://github.com/GoogleChrome/web-vitals/issues/159\n  // The check for `window.performance` is needed to support Opera mini:\n  // https://github.com/GoogleChrome/web-vitals/issues/185\n\n\n  const fcpEntry = window.performance && performance.getEntriesByName && performance.getEntriesByName('first-contentful-paint')[0];\n  const po = fcpEntry ? null : observe('paint', entryHandler);\n\n  if (fcpEntry || po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    if (fcpEntry) {\n      entryHandler(fcpEntry);\n    }\n\n    onBFCacheRestore(event => {\n      metric = initMetric('FCP');\n      report = bindReporter(onReport, metric, reportAllChanges);\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          metric.value = performance.now() - event.timeStamp;\n          report(true);\n        });\n      });\n    });\n  }\n};","map":{"version":3,"names":["bindReporter","getVisibilityWatcher","initMetric","observe","onBFCacheRestore","getFCP","onReport","reportAllChanges","visibilityWatcher","metric","report","entryHandler","entry","name","po","disconnect","startTime","firstHiddenTime","value","entries","push","fcpEntry","window","performance","getEntriesByName","event","requestAnimationFrame","now","timeStamp"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/web-vitals/dist/modules/getFCP.js"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onBFCacheRestore } from './lib/onBFCacheRestore.js';\nexport const getFCP = (onReport, reportAllChanges) => {\n    const visibilityWatcher = getVisibilityWatcher();\n    let metric = initMetric('FCP');\n    let report;\n    const entryHandler = (entry) => {\n        if (entry.name === 'first-contentful-paint') {\n            if (po) {\n                po.disconnect();\n            }\n            // Only report if the page wasn't hidden prior to the first paint.\n            if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n                metric.value = entry.startTime;\n                metric.entries.push(entry);\n                report(true);\n            }\n        }\n    };\n    // TODO(philipwalton): remove the use of `fcpEntry` once this bug is fixed.\n    // https://bugs.webkit.org/show_bug.cgi?id=225305\n    // The check for `getEntriesByName` is needed to support Opera:\n    // https://github.com/GoogleChrome/web-vitals/issues/159\n    // The check for `window.performance` is needed to support Opera mini:\n    // https://github.com/GoogleChrome/web-vitals/issues/185\n    const fcpEntry = window.performance && performance.getEntriesByName &&\n        performance.getEntriesByName('first-contentful-paint')[0];\n    const po = fcpEntry ? null : observe('paint', entryHandler);\n    if (fcpEntry || po) {\n        report = bindReporter(onReport, metric, reportAllChanges);\n        if (fcpEntry) {\n            entryHandler(fcpEntry);\n        }\n        onBFCacheRestore((event) => {\n            metric = initMetric('FCP');\n            report = bindReporter(onReport, metric, reportAllChanges);\n            requestAnimationFrame(() => {\n                requestAnimationFrame(() => {\n                    metric.value = performance.now() - event.timeStamp;\n                    report(true);\n                });\n            });\n        });\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,gBAAX,KAAgC;EAClD,MAAMC,iBAAiB,GAAGP,oBAAoB,EAA9C;EACA,IAAIQ,MAAM,GAAGP,UAAU,CAAC,KAAD,CAAvB;EACA,IAAIQ,MAAJ;;EACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC5B,IAAIA,KAAK,CAACC,IAAN,KAAe,wBAAnB,EAA6C;MACzC,IAAIC,EAAJ,EAAQ;QACJA,EAAE,CAACC,UAAH;MACH,CAHwC,CAIzC;;;MACA,IAAIH,KAAK,CAACI,SAAN,GAAkBR,iBAAiB,CAACS,eAAxC,EAAyD;QACrDR,MAAM,CAACS,KAAP,GAAeN,KAAK,CAACI,SAArB;QACAP,MAAM,CAACU,OAAP,CAAeC,IAAf,CAAoBR,KAApB;QACAF,MAAM,CAAC,IAAD,CAAN;MACH;IACJ;EACJ,CAZD,CAJkD,CAiBlD;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAMW,QAAQ,GAAGC,MAAM,CAACC,WAAP,IAAsBA,WAAW,CAACC,gBAAlC,IACbD,WAAW,CAACC,gBAAZ,CAA6B,wBAA7B,EAAuD,CAAvD,CADJ;EAEA,MAAMV,EAAE,GAAGO,QAAQ,GAAG,IAAH,GAAUlB,OAAO,CAAC,OAAD,EAAUQ,YAAV,CAApC;;EACA,IAAIU,QAAQ,IAAIP,EAAhB,EAAoB;IAChBJ,MAAM,GAAGV,YAAY,CAACM,QAAD,EAAWG,MAAX,EAAmBF,gBAAnB,CAArB;;IACA,IAAIc,QAAJ,EAAc;MACVV,YAAY,CAACU,QAAD,CAAZ;IACH;;IACDjB,gBAAgB,CAAEqB,KAAD,IAAW;MACxBhB,MAAM,GAAGP,UAAU,CAAC,KAAD,CAAnB;MACAQ,MAAM,GAAGV,YAAY,CAACM,QAAD,EAAWG,MAAX,EAAmBF,gBAAnB,CAArB;MACAmB,qBAAqB,CAAC,MAAM;QACxBA,qBAAqB,CAAC,MAAM;UACxBjB,MAAM,CAACS,KAAP,GAAeK,WAAW,CAACI,GAAZ,KAAoBF,KAAK,CAACG,SAAzC;UACAlB,MAAM,CAAC,IAAD,CAAN;QACH,CAHoB,CAArB;MAIH,CALoB,CAArB;IAMH,CATe,CAAhB;EAUH;AACJ,CA1CM"},"metadata":{},"sourceType":"module"}