{"ast":null,"code":"import { Vector3 } from \"three\";\nconst DAMPING = 0.9;\nexport class Sphere {\n  // holds the accumulated force to be applied to the next simulation iteration only.\n  constructor(position, radius) {\n    this.position = void 0;\n    this.velocity = void 0;\n    this.acceleration = void 0;\n    this.forceAccum = void 0;\n    this.radius = void 0;\n    this.inverseMass = void 0;\n    this.position = position;\n    this.velocity = new Vector3(0, 0, 0);\n    this.acceleration = new Vector3(0, 0, 0);\n    this.forceAccum = new Vector3(0, 0, 0);\n    this.radius = radius;\n    this.inverseMass = 1;\n  }\n\n  integrate(duration) {\n    // Don't integrate if mass is infinite or duration <= 0.\n    if (this.inverseMass <= 0 || duration <= 0) return; // Work out the acceleration from the force.\n\n    this.acceleration = this.forceAccum.clone().multiplyScalar(this.inverseMass); // Clear the forces.\n\n    this.clearAccumulator(); // impose drag.\n\n    this.velocity.multiplyScalar(Math.pow(DAMPING, duration)); // update the velocity from the acceleration.\n\n    this.velocity.addScaledVector(this.acceleration, duration); // update the linear position.\n\n    this.position.addScaledVector(this.velocity, duration);\n  } // Clears the forces applied to the particle.\n\n\n  clearAccumulator() {\n    this.forceAccum = new Vector3(0, 0, 0);\n  }\n\n  getPosition() {\n    return this.position.clone();\n  }\n\n}","map":{"version":3,"names":["Vector3","DAMPING","Sphere","constructor","position","radius","velocity","acceleration","forceAccum","inverseMass","integrate","duration","clone","multiplyScalar","clearAccumulator","Math","pow","addScaledVector","getPosition"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/physics_engine/Sphere.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport { Vector3 } from \"three\";\n\nconst DAMPING = 0.9;\n\nexport class Sphere {\n    public position: Vector3;\n    public velocity: Vector3;\n    public acceleration: Vector3;\n\n    // holds the accumulated force to be applied to the next simulation iteration only.\n    public forceAccum: Vector3;\n\n    public radius: number;\n    public inverseMass: number;\n\n    constructor(position: Vector3, radius: number) {\n        this.position = position;\n        this.velocity = new Vector3(0, 0, 0);\n        this.acceleration = new Vector3(0, 0, 0);\n\n        this.forceAccum = new Vector3(0, 0, 0);\n\n        this.radius = radius;\n        this.inverseMass = 1;\n    }\n\n    integrate(duration: number): void {\n        // Don't integrate if mass is infinite or duration <= 0.\n        if (this.inverseMass <= 0 || duration <= 0)\n            return;\n\n        // Work out the acceleration from the force.\n        this.acceleration = this.forceAccum.clone().multiplyScalar(this.inverseMass);\n\n        // Clear the forces.\n        this.clearAccumulator();\n\n        // impose drag.\n        this.velocity.multiplyScalar(Math.pow(DAMPING, duration));\n\n        // update the velocity from the acceleration.\n        this.velocity.addScaledVector(this.acceleration, duration);\n\n        // update the linear position.\n        this.position.addScaledVector(this.velocity, duration);\n    }\n\n    // Clears the forces applied to the particle.\n    clearAccumulator(): void {\n        this.forceAccum = new Vector3(0, 0, 0);\n    }\n\n    getPosition(): Vector3 {\n        return this.position.clone();\n    }\n}"],"mappings":"AACA,SAASA,OAAT,QAAwB,OAAxB;AAEA,MAAMC,OAAO,GAAG,GAAhB;AAEA,OAAO,MAAMC,MAAN,CAAa;EAKhB;EAMAC,WAAW,CAACC,QAAD,EAAoBC,MAApB,EAAoC;IAAA,KAVxCD,QAUwC;IAAA,KATxCE,QASwC;IAAA,KARxCC,YAQwC;IAAA,KALxCC,UAKwC;IAAA,KAHxCH,MAGwC;IAAA,KAFxCI,WAEwC;IAC3C,KAAKL,QAAL,GAAgBA,QAAhB;IACA,KAAKE,QAAL,GAAgB,IAAIN,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAhB;IACA,KAAKO,YAAL,GAAoB,IAAIP,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAApB;IAEA,KAAKQ,UAAL,GAAkB,IAAIR,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAlB;IAEA,KAAKK,MAAL,GAAcA,MAAd;IACA,KAAKI,WAAL,GAAmB,CAAnB;EACH;;EAEDC,SAAS,CAACC,QAAD,EAAyB;IAC9B;IACA,IAAI,KAAKF,WAAL,IAAoB,CAApB,IAAyBE,QAAQ,IAAI,CAAzC,EACI,OAH0B,CAK9B;;IACA,KAAKJ,YAAL,GAAoB,KAAKC,UAAL,CAAgBI,KAAhB,GAAwBC,cAAxB,CAAuC,KAAKJ,WAA5C,CAApB,CAN8B,CAQ9B;;IACA,KAAKK,gBAAL,GAT8B,CAW9B;;IACA,KAAKR,QAAL,CAAcO,cAAd,CAA6BE,IAAI,CAACC,GAAL,CAASf,OAAT,EAAkBU,QAAlB,CAA7B,EAZ8B,CAc9B;;IACA,KAAKL,QAAL,CAAcW,eAAd,CAA8B,KAAKV,YAAnC,EAAiDI,QAAjD,EAf8B,CAiB9B;;IACA,KAAKP,QAAL,CAAca,eAAd,CAA8B,KAAKX,QAAnC,EAA6CK,QAA7C;EACH,CAzCe,CA2ChB;;;EACAG,gBAAgB,GAAS;IACrB,KAAKN,UAAL,GAAkB,IAAIR,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAlB;EACH;;EAEDkB,WAAW,GAAY;IACnB,OAAO,KAAKd,QAAL,CAAcQ,KAAd,EAAP;EACH;;AAlDe"},"metadata":{},"sourceType":"module"}