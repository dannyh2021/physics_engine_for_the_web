{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx\";\nimport React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(50, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(20, 20, 20);\ncamera.up.set(0, 0, 1); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null;\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onTest = this.onTest.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    this.w = new World(); // graphics\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement); // focus canvas\n\n    console.log(\"focusing\", this.canvasRef.current);\n    this.canvasRef.current.focus();\n    this.onVisualize();\n  }\n\n  onStart() {\n    this.w.startGameLoop();\n  }\n\n  onStop() {\n    console.log('hi');\n    this.w.clearCurrentLoop();\n  }\n\n  onTest() {\n    console.log(\"onTest\");\n    const objects = this.w.getObjects();\n\n    for (let i = 0; i < objects.length; i++) {\n      console.log(i, objects[i].position);\n    }\n  }\n\n  onKeyDown(e) {\n    console.log(e.key);\n    console.log(\"hi\");\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    } // create scene and add lighting\n    // const scene = new THREE.Scene();\n    // scene.add(point_light, ambient_light);\n    // const sphere_geometry = new THREE.SphereGeometry(3);\n    // const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n    // const spheres = [];\n    // const sphere = new THREE.Mesh(sphere_geometry, material);\n    // sphere.position.set(2, 0, 0);\n    // spheres.push(sphere);\n    // scene.add(sphere);\n\n\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      const scene = new THREE.Scene();\n      scene.add(point_light, ambient_light);\n      const objects = currentInstance.w.getObjects();\n\n      for (let object of objects) {\n        if (object instanceof Sphere) {\n          const sphere_geometry = new THREE.SphereGeometry(object.radius);\n          const material = new THREE.MeshPhongMaterial({\n            color: 0x00bcd6\n          });\n          const sphere = new THREE.Mesh(sphere_geometry, material);\n          sphere.position.set(object.position.x, object.position.y, object.position.z);\n          scene.add(sphere);\n        }\n      }\n\n      camera.lookAt(0, 0, 0);\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Home page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onTest,\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT,\n          tabIndex: 1,\n          onKeyDown: this.onKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","World","THREE","OrbitControls","Sphere","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Home","Component","constructor","props","canvasRef","w","renderer","animationRequestID","createRef","onStart","bind","onStop","onTest","onKeyDown","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","console","log","focus","onVisualize","startGameLoop","clearCurrentLoop","objects","getObjects","i","length","e","key","cancelAnimationFrame","currentInstance","animate","requestAnimationFrame","scene","Scene","add","object","sphere_geometry","SphereGeometry","radius","material","MeshPhongMaterial","color","sphere","Mesh","x","y","z","lookAt","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx"],"sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Box } from \"../physics_engine/Box\";\nimport { Sphere } from \"../physics_engine/Sphere\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(50, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(20, 20, 20);\ncamera.up.set(0, 0, 1);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Home extends React.Component {\n    canvasRef: any;\n    private w: World;\n    private renderer: any;\n    private animationRequestID: any;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        this.onStart = this.onStart.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.onTest = this.onTest.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.w = new World();\n\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        // focus canvas\n        console.log(\"focusing\", this.canvasRef.current);\n        this.canvasRef.current.focus();\n\n        this.onVisualize();\n    }\n\n    onStart() {\n        this.w.startGameLoop();\n    }\n\n    onStop() {\n        console.log('hi');\n        this.w.clearCurrentLoop();\n    }\n\n    onTest() {\n        console.log(\"onTest\");\n        const objects = this.w.getObjects();\n        for (let i = 0; i < objects.length; i++) {\n            console.log(i, objects[i].position);\n        }\n    }\n\n    onKeyDown(e: SyntheticEvent) {\n        console.log(e.key);\n        console.log(\"hi\");\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        // create scene and add lighting\n        // const scene = new THREE.Scene();\n        // scene.add(point_light, ambient_light);\n\n        // const sphere_geometry = new THREE.SphereGeometry(3);\n        // const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n        // const spheres = [];\n        // const sphere = new THREE.Mesh(sphere_geometry, material);\n        // sphere.position.set(2, 0, 0);\n        // spheres.push(sphere);\n        // scene.add(sphere);\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n\n            const scene = new THREE.Scene();\n            scene.add(point_light, ambient_light);\n\n            const objects = currentInstance.w.getObjects();\n            for (let object of objects) {\n                if (object instanceof Sphere) {\n                    const sphere_geometry = new THREE.SphereGeometry(object.radius);\n                    const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n                    const sphere = new THREE.Mesh(sphere_geometry, material);\n                    sphere.position.set(object.position.x, object.position.y, object.position.z);\n                    scene.add(sphere);\n                }\n            }\n            \n            camera.lookAt(0, 0, 0);\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <h2>Home page desu...</h2>\n                <button onClick={this.onStart}>Start</button>\n                <button onClick={this.onStop}>Stop</button>\n                <button onClick={this.onTest}>Test</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\n                        tabIndex={1}\n                        onKeyDown={ this.onKeyDown } />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}