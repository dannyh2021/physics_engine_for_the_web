{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx\";\nimport React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Vector3 } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null;\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n    this.onTest = this.onTest.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    this.w = new World(); // graphics\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement);\n    this.onVisualize();\n  }\n\n  onStart() {// this.w.startGameLoop();\n  }\n\n  onStop() {\n    console.log('hi');\n  }\n\n  onTest() {\n    console.log(\"onTest\");\n    const objects = this.w.objects;\n\n    for (let i = 0; i < objects.length; i++) {\n      console.log(i, objects[i].position);\n    }\n  }\n\n  onKeyDown(e) {\n    /*\n    if (e.key === \"ArrowLeft\") {\n        this.w.updateCharacterForce(new Vector3(-100, 0, 0));\n    } else if (e.key === \"ArrowRight\") {\n        this.w.updateCharacterForce(new Vector3(100, 0, 0));\n    } else if (e.key === \"ArrowUp\") {\n        this.w.updateCharacterForce(new Vector3(0, 100, 0));\n    } else if (e.key === \"ArrowDown\") {\n        this.w.updateCharacterForce(new Vector3(0, -100, 0));\n    }*/\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    }\n\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      const scene = new THREE.Scene();\n      scene.add(point_light, ambient_light);\n      const objects = currentInstance.w.objects;\n\n      for (let object of objects) {\n        if (object instanceof Sphere) {\n          const sphere_geometry = new THREE.SphereGeometry(object.radius);\n          const material = new THREE.MeshPhongMaterial({\n            color: 0x00bcd6\n          });\n          const sphere = new THREE.Mesh(sphere_geometry, material);\n          sphere.position.set(object.position.x, object.position.y, object.position.z);\n          scene.add(sphere);\n        }\n      } // add gridHelper\n\n\n      const gridHelper = new THREE.GridHelper(100, 10);\n      gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n      scene.add(gridHelper);\n      camera.lookAt(0, 0, 0);\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about\",\n      onKeyDown: this.onKeyDown,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onTest,\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","World","THREE","OrbitControls","Sphere","Vector3","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Home","Component","constructor","props","canvasRef","w","renderer","animationRequestID","createRef","onStart","bind","onStop","onTest","onKeyDown","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","onVisualize","console","log","objects","i","length","e","cancelAnimationFrame","currentInstance","animate","requestAnimationFrame","scene","Scene","add","object","sphere_geometry","SphereGeometry","radius","material","MeshPhongMaterial","color","sphere","Mesh","x","y","z","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","lookAt","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx"],"sourcesContent":["import React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { Box } from \"../physics_engine/Box\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Vector3 } from \"three\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Home extends React.Component {\n    canvasRef: any;\n    private w: World;\n    private renderer: any;\n    private animationRequestID: any;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        this.onStart = this.onStart.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.onTest = this.onTest.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.w = new World();\n\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        this.onVisualize();\n    }\n\n    onStart() {\n        // this.w.startGameLoop();\n    }\n\n    onStop() {\n        console.log('hi');\n    }\n\n    onTest() {\n        console.log(\"onTest\");\n        const objects = this.w.objects;\n        for (let i = 0; i < objects.length; i++) {\n            console.log(i, objects[i].position);\n        }\n    }\n\n    onKeyDown(e: any) {\n        /*\n        if (e.key === \"ArrowLeft\") {\n            this.w.updateCharacterForce(new Vector3(-100, 0, 0));\n        } else if (e.key === \"ArrowRight\") {\n            this.w.updateCharacterForce(new Vector3(100, 0, 0));\n        } else if (e.key === \"ArrowUp\") {\n            this.w.updateCharacterForce(new Vector3(0, 100, 0));\n        } else if (e.key === \"ArrowDown\") {\n            this.w.updateCharacterForce(new Vector3(0, -100, 0));\n        }*/\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n\n            const scene = new THREE.Scene();\n            scene.add(point_light, ambient_light);\n\n            const objects = currentInstance.w.objects;\n            for (let object of objects) {\n                if (object instanceof Sphere) {\n                    const sphere_geometry = new THREE.SphereGeometry(object.radius);\n                    const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n                    const sphere = new THREE.Mesh(sphere_geometry, material);\n                    sphere.position.set(object.position.x, object.position.y, object.position.z);\n                    scene.add(sphere);\n                }\n            }\n\n            // add gridHelper\n            const gridHelper = new THREE.GridHelper( 100, 10 );\n            gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n            scene.add(gridHelper);\n            \n            camera.lookAt(0, 0, 0);\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    render() {\n        return (\n            <div className=\"about\"\n                onKeyDown={ this.onKeyDown } >\n                <h2>About</h2>\n                <button onClick={this.onStart}>Start</button>\n                <button onClick={this.onStop}>Stop</button>\n                <button onClick={this.onTest}>Test</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}