{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const onHidden = (cb, once) => {\n  const onHiddenOrPageHide = event => {\n    if (event.type === 'pagehide' || document.visibilityState === 'hidden') {\n      cb(event);\n\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  addEventListener('visibilitychange', onHiddenOrPageHide, true); // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};","map":{"version":3,"names":["onHidden","cb","once","onHiddenOrPageHide","event","type","document","visibilityState","removeEventListener","addEventListener"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/node_modules/web-vitals/dist/modules/lib/onHidden.js"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const onHidden = (cb, once) => {\n    const onHiddenOrPageHide = (event) => {\n        if (event.type === 'pagehide' || document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;EAClC,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IAClC,IAAIA,KAAK,CAACC,IAAN,KAAe,UAAf,IAA6BC,QAAQ,CAACC,eAAT,KAA6B,QAA9D,EAAwE;MACpEN,EAAE,CAACG,KAAD,CAAF;;MACA,IAAIF,IAAJ,EAAU;QACNM,mBAAmB,CAAC,kBAAD,EAAqBL,kBAArB,EAAyC,IAAzC,CAAnB;QACAK,mBAAmB,CAAC,UAAD,EAAaL,kBAAb,EAAiC,IAAjC,CAAnB;MACH;IACJ;EACJ,CARD;;EASAM,gBAAgB,CAAC,kBAAD,EAAqBN,kBAArB,EAAyC,IAAzC,CAAhB,CAVkC,CAWlC;EACA;;EACAM,gBAAgB,CAAC,UAAD,EAAaN,kBAAb,EAAiC,IAAjC,CAAhB;AACH,CAdM"},"metadata":{},"sourceType":"module"}