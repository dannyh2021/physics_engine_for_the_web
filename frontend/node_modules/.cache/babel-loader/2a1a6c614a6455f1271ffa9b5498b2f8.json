{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx\";\nimport React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(50, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(20, 20, 0);\ncamera.up.set(0, 0, 1); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.w = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.w = new World(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null;\n    this.onStart = this.onStart.bind(this);\n    this.onStop = this.onStop.bind(this);\n  }\n\n  componentDidMount() {\n    this.w = new World(); // graphics\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n    this.onVisualize();\n  }\n\n  onStart() {\n    this.w.startGameLoop();\n  }\n\n  onStop() {\n    console.log('hi');\n    this.w.clearCurrentLoop();\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    } // create scene and add lighting\n\n\n    const scene = new THREE.Scene();\n    scene.add(point_light, ambient_light);\n    const sphere_geometry = new THREE.SphereGeometry(3);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x00bcd6\n    }); // const spheres = [];\n\n    const sphere = new THREE.Mesh(sphere_geometry, material);\n    sphere.position.set(0, 0, 0); // spheres.push(sphere);\n\n    scene.add(sphere);\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate); // camera.lookAt(0, 0, 0);\n\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Home page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","World","THREE","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Home","Component","constructor","props","canvasRef","w","renderer","animationRequestID","createRef","onStart","bind","onStop","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","onVisualize","startGameLoop","console","log","clearCurrentLoop","cancelAnimationFrame","scene","Scene","add","sphere_geometry","SphereGeometry","material","MeshPhongMaterial","color","sphere","Mesh","currentInstance","animate","requestAnimationFrame","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Home/Home.tsx"],"sourcesContent":["import React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(50, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(20, 20, 0);\ncamera.up.set(0, 0, 1);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(10, 10, 10);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Home extends React.Component {\n    canvasRef: any;\n    private w: World;\n    private renderer: any;\n    private animationRequestID: any;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.w = new World();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n\n        this.onStart = this.onStart.bind(this);\n        this.onStop = this.onStop.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.w = new World();\n\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        this.onVisualize();\n    }\n\n    onStart() {\n        this.w.startGameLoop();\n    }\n\n    onStop() {\n        console.log('hi');\n        this.w.clearCurrentLoop();\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        // create scene and add lighting\n        const scene = new THREE.Scene();\n        scene.add(point_light, ambient_light);\n\n        const sphere_geometry = new THREE.SphereGeometry(3);\n        const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n        // const spheres = [];\n        const sphere = new THREE.Mesh(sphere_geometry, material);\n        sphere.position.set(0, 0, 0);\n        // spheres.push(sphere);\n        scene.add(sphere);\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n            // camera.lookAt(0, 0, 0);\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <h2>Home page desu...</h2>\n                <button onClick={this.onStart}>Start</button>\n                <button onClick={this.onStop}>Stop</button>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}