{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground4.tsx\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500; // camera\n\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0); // add lighting\n\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(50, 50, 50);\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\nexport default class Playground4 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = void 0;\n    this.renderer = void 0;\n    this.animationRequestID = void 0;\n    this.canvasRef = /*#__PURE__*/React.createRef(); // graphics\n\n    this.renderer = null;\n    this.animationRequestID = null;\n  }\n\n  componentDidMount() {\n    // graphics\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvasRef.current,\n      alpha: false\n    });\n    this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT); // orbit controls\n\n    const controls = new OrbitControls(camera, this.renderer.domElement);\n    this.setUpSpheres();\n    this.onVisualize();\n  }\n\n  setUpSpheres() {\n    const s = new Sphere(new Vector3(-50, 0, 0), 5);\n    const s2 = new Sphere(new Vector3(0, 5, 0), 5);\n    s.velocity = new Vector3(10, 0, 0);\n  }\n\n  onVisualize() {\n    // cancel ongoing animation\n    if (this.animationRequestID) {\n      cancelAnimationFrame(this.animationRequestID);\n    } // set up objects\n\n\n    const b = new Box(new Vector3(0, 0, 20), 10, 10, 10);\n    const b2 = new Box(new Vector3(40, 40, 20), 10, 20, 20);\n    const b3 = new Box(new Vector3(-40, 40, 20), 10, 10, 30);\n    const boxGeometry = new THREE.BoxGeometry(b.width, b.length, b.height);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x00bcd6\n    });\n    const box = new THREE.Mesh(boxGeometry, material); // set up scene\n\n    const scene = new THREE.Scene();\n    scene.add(box); // add lighting\n\n    scene.add(point_light, ambient_light); // add gridHelper\n\n    const gridHelper = new THREE.GridHelper(100, 10);\n    gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n    scene.add(gridHelper);\n    let xRotationAngle = 0;\n    let yRotationAngle = 0;\n    let zRotationAngle = 0;\n    const currentInstance = this;\n\n    function animate() {\n      currentInstance.animationRequestID = requestAnimationFrame(animate);\n      box.position.set(b.position.x, b.position.y, b.position.z);\n      b.integrate(1 / 60); // update rotation of the box mesh\n\n      box.setRotationFromQuaternion(b.rotation); //box.rotation.setFromRotationMatrix(convertMatrix3ToMatrix4(b.rotation));\n\n      /* const eulerAngles = getEulerAngles(b.rotation);\n      box.rotation.x = eulerAngles.psi;\n      box.rotation.y = eulerAngles.theta;\n      box.rotation.z = eulerAngles.phi;*/\n\n      currentInstance.renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playground\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playground 3 page desu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas_container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","THREE","Vector3","Sphere","Box","OrbitControls","CANVAS_WIDTH","CANVAS_HEIGHT","camera","PerspectiveCamera","position","set","up","light_color","intensity","point_light","PointLight","ambient_light","AmbientLight","Playground4","Component","constructor","props","canvasRef","renderer","animationRequestID","createRef","componentDidMount","WebGLRenderer","canvas","current","alpha","setSize","controls","domElement","setUpSpheres","onVisualize","s","s2","velocity","cancelAnimationFrame","b","b2","b3","boxGeometry","BoxGeometry","width","length","height","material","MeshPhongMaterial","color","box","Mesh","scene","Scene","add","gridHelper","GridHelper","rotateOnWorldAxis","Math","PI","xRotationAngle","yRotationAngle","zRotationAngle","currentInstance","animate","requestAnimationFrame","x","y","z","integrate","setRotationFromQuaternion","rotation","render"],"sources":["/Users/danny/Github/physics_engine_for_the_web/frontend/src/Playgrounds/Playground4.tsx"],"sourcesContent":["import React from \"react\";\nimport { World } from \"../physics_engine/physics_engine\";\nimport * as THREE from \"three\";\nimport { Matrix3, Scene, Vector3 } from \"three\";\nimport { Sphere } from \"../physics_engine/Sphere\";\nimport { Box } from \"../physics_engine/Box\";\nimport { OrbitControls } from \"three-orbitcontrols-ts\";\nimport { getEulerAngles, xRotationMatrix3, yRotationMatrix3, zRotationMatrix3, convertMatrix3ToMatrix4 } from \"../physics_engine/math_library\";\n\nconst CANVAS_WIDTH = 1000;\nconst CANVAS_HEIGHT = 500;\n\n// camera\nconst camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000);\ncamera.position.set(0, 0, CANVAS_HEIGHT / 4);\ncamera.up.set(0, 1, 0);\n\n// add lighting\nconst light_color = 0xffffff;\nconst intensity = 1;\nconst point_light = new THREE.PointLight(light_color, intensity);\npoint_light.position.set(50, 50, 50);\n\nconst ambient_light = new THREE.AmbientLight(light_color, 0.2);\n\nexport default class Playground4 extends React.Component {\n    private canvasRef: any;\n    private renderer: any;\n    private animationRequestID: any;\n\n    constructor(props: any) {\n        super(props);\n        this.canvasRef = React.createRef();\n\n        // graphics\n        this.renderer = null;\n        this.animationRequestID = null;\n    }\n\n    componentDidMount(): void {\n        // graphics\n        this.renderer = new THREE.WebGLRenderer({ canvas: this.canvasRef.current, alpha: false })\n        this.renderer.setSize(CANVAS_WIDTH, CANVAS_HEIGHT);\n\n        // orbit controls\n        const controls = new OrbitControls(camera, this.renderer.domElement);\n\n        this.setUpSpheres();\n        this.onVisualize();\n    }\n\n    setUpSpheres(): void {\n        const s = new Sphere(new Vector3(-50, 0, 0), 5);\n        const s2 = new Sphere(new Vector3(0, 5, 0), 5);\n\n        s.velocity = new Vector3(10, 0, 0);\n    }\n\n    onVisualize() {\n        // cancel ongoing animation\n        if (this.animationRequestID) {\n            cancelAnimationFrame(this.animationRequestID);\n        }\n\n        // set up objects\n        const b = new Box(new Vector3(0, 0, 20), 10, 10, 10);\n        const b2 = new Box(new Vector3(40, 40, 20), 10, 20, 20);\n        const b3 = new Box(new Vector3(-40, 40, 20), 10, 10, 30);\n\n        const boxGeometry = new THREE.BoxGeometry(b.width, b.length, b.height);\n        const material = new THREE.MeshPhongMaterial({ color: 0x00bcd6 });\n\n        const box = new THREE.Mesh(boxGeometry, material);\n        \n        // set up scene\n        const scene = new THREE.Scene();\n        scene.add(box);\n\n        // add lighting\n        scene.add(point_light, ambient_light);\n\n        // add gridHelper\n        const gridHelper = new THREE.GridHelper( 100, 10 );\n        gridHelper.rotateOnWorldAxis(new Vector3(1, 0, 0), Math.PI / 2);\n        scene.add(gridHelper);\n\n        let xRotationAngle = 0;\n        let yRotationAngle = 0;\n        let zRotationAngle = 0;\n\n        const currentInstance = this;\n        function animate() {\n            currentInstance.animationRequestID = requestAnimationFrame(animate);\n            \n            box.position.set(b.position.x, b.position.y, b.position.z);\n\n            b.integrate(1/60);\n\n            // update rotation of the box mesh\n            box.setRotationFromQuaternion(b.rotation);\n            //box.rotation.setFromRotationMatrix(convertMatrix3ToMatrix4(b.rotation));\n            /* const eulerAngles = getEulerAngles(b.rotation);\n            box.rotation.x = eulerAngles.psi;\n            box.rotation.y = eulerAngles.theta;\n            box.rotation.z = eulerAngles.phi;*/\n\n            currentInstance.renderer.render(scene, camera);\n        }\n\n        animate();\n    }\n\n    render() {\n        return (\n            <div className=\"playground\">\n                <h2>Playground 3 page desu...</h2>\n                <div id=\"canvas_container\">\n                    <canvas ref={this.canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}